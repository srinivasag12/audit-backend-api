DROP TRIGGER AUDIT_STAG_TEST.AUDIT_AUDITOR_DTLS_HIST_TRG;

CREATE OR REPLACE TRIGGER AUDIT_STAG_TEST."AUDIT_AUDITOR_DTLS_HIST_TRG"   
   BEFORE INSERT OR DELETE OR UPDATE
   ON AUDIT_STAG_TEST.AUDIT_AUDITOR_DETAILS    FOR EACH ROW
DECLARE
   v_status               VARCHAR2 (50);
   v_audit_seq_no         NUMBER (10);
   v_user_id              VARCHAR2 (50 BYTE);
   v_audit_role_id        NUMBER (8);
   v_aud_signature        BLOB;
   v_aud_signature_date   DATE;
   v_aud_lead_status      NUMBER (1);
   v_audit_type_id        NUMBER (8);
   v_company_id           NUMBER (8);
   v_user_ins             VARCHAR2 (100 BYTE);
   v_date_ins             DATE;
   v_role_desc            VARCHAR2 (15);
   v_check_lead_audit     VARCHAR2 (15);
BEGIN
   IF INSERTING OR UPDATING
   THEN
      v_audit_seq_no := :new.AUDIT_SEQ_NO;
      v_user_id := :new.USER_ID;
      v_audit_role_id := :new.AUDIT_ROLE_ID;
      v_aud_signature := :new.AUD_SIGNATURE;
      v_aud_signature_date := :new.AUD_SIGNATURE_DATE;
      v_aud_lead_status := :new.AUD_LEAD_STATUS;
      v_audit_type_id := :new.AUDIT_TYPE_ID;
      v_company_id := :new.COMPANY_ID;
      v_user_ins := :new.USER_INS;
      v_date_ins := :new.DATE_INS;
   END IF;

   IF INSERTING
   THEN
      IF (    :new.AUDIT_ROLE_ID = 1001
          AND :new.AUD_LEAD_STATUS = 0
          AND :new.AUD_SIGNATURE IS NULL)
      THEN
         v_status := 'AUDITOR has added';
      ELSIF (    :new.AUDIT_ROLE_ID = 1001
             AND :new.AUD_LEAD_STATUS = 1
             AND :new.AUD_SIGNATURE IS NULL)
      THEN
         v_status := 'LEAD AUDITOR has added';
      ELSIF (:new.AUDIT_ROLE_ID = 1002 AND :new.AUD_SIGNATURE IS NULL)
      THEN
         v_status := 'OBSERVER has added';
      ELSIF (:new.AUDIT_ROLE_ID = 1003)
      THEN
         v_status := 'REVIEWER has added';
      ELSIF (    :new.AUDIT_ROLE_ID = 1001
             AND :new.AUD_LEAD_STATUS = 1
             AND :new.AUD_SIGNATURE IS NOT NULL)
      THEN
         v_status := 'LEAD AUDITOR has added with signature';
      ELSIF (    :new.AUDIT_ROLE_ID = 1001
             AND :new.AUD_LEAD_STATUS = 0
             AND :new.AUD_SIGNATURE IS NOT NULL)
      THEN
         v_status := 'AUDITOR has added with signature';
      ELSIF (:new.AUDIT_ROLE_ID = 1002 AND :new.AUD_SIGNATURE IS NOT NULL)
      THEN
         v_status := 'OBSERVER has added with signature';
      END IF;
   END IF;

   IF UPDATING
   THEN
      IF (:old.AUD_LEAD_STATUS = 1 AND :new.AUD_LEAD_STATUS = 0)
      THEN
         SELECT A.ROLE_DESC
           INTO v_check_lead_audit
           FROM MA_ROLES A, MA_USER_ROLES B
          WHERE     A.COMPANY_ID = B.COMPANY_ID
                AND A.ROLE_ID = B.ROLE_ID
                AND A.COMPANY_ID = :new.COMPANY_ID
                AND B.USER_ID = :new.USER_INS;

         v_status :=
            'Lead auditor as changed by ' || ' ' || v_check_lead_audit;
      END IF;

      IF (:new.AUD_SIGNATURE IS NOT NULL)
      THEN
         IF (DBMS_LOB.COMPARE (:new.AUD_SIGNATURE, :old.AUD_SIGNATURE) <> 0
             AND :old.AUD_SIGNATURE IS NOT NULL)
         THEN
            IF (:old.AUDIT_ROLE_ID = 1001 AND :old.AUD_LEAD_STATUS = 1)
            THEN
               v_status := 'LEAD AUDITOR Signature has updated';
            ELSIF (:old.AUDIT_ROLE_ID = 1001)
            THEN
               v_status := 'AUDITOR Signature has updated';
            ELSIF (:old.AUDIT_ROLE_ID = 1002)
            THEN
               v_status := 'OBSERVER Signature has updated';
            END IF;
         ELSIF (:old.AUD_SIGNATURE IS NULL)
         THEN
            IF (:old.AUDIT_ROLE_ID = 1001 AND :old.AUD_LEAD_STATUS = 1)
            THEN
               v_status := 'LEAD AUDITOR Signature has added';
            ELSIF (:old.AUDIT_ROLE_ID = 1001)
            THEN
               v_status := 'AUDITOR Signature has added';
            ELSIF (:old.AUDIT_ROLE_ID = 1002)
            THEN
               v_status := 'OBSERVER Signature has added';
            END IF;
         END IF;
      ELSE
         IF (:old.AUD_SIGNATURE IS NOT NULL)
         THEN
            IF (:old.AUDIT_ROLE_ID = 1001 AND :old.AUD_LEAD_STATUS = 1)
            THEN
               v_status := 'LEAD AUDITOR Signature has removed';
            ELSIF (:old.AUDIT_ROLE_ID = 1001)
            THEN
               v_status := 'AUDITOR Signature has removed';
            ELSIF (:old.AUDIT_ROLE_ID = 1002)
            THEN
               v_status := 'OBSERVER Signature has removed';
            END IF;
         END IF;
      END IF;
   END IF;

   IF DELETING
   THEN
      v_audit_seq_no := :old.AUDIT_SEQ_NO;
      v_user_id := :old.USER_ID;
      v_audit_role_id := :old.AUDIT_ROLE_ID;
      v_aud_signature := :old.AUD_SIGNATURE;
      v_aud_signature_date := :old.AUD_SIGNATURE_DATE;
      v_aud_lead_status := :old.AUD_LEAD_STATUS;
      v_audit_type_id := :old.AUDIT_TYPE_ID;
      v_company_id := :old.COMPANY_ID;
      v_user_ins := :old.USER_INS;
      v_date_ins := :old.DATE_INS;
      
      IF (:old.AUD_LEAD_STATUS = 1)
      THEN
         v_status := 'LEAD AUDITOR has deleted';
      ELSE
         SELECT AUDIT_ROLE_DESC
           INTO v_role_desc
           FROM MA_AUDIT_ROLES
          WHERE AUDIT_ROLE_ID = :OLD.AUDIT_ROLE_ID
                AND COMPANY_ID = :OLD.COMPANY_ID;

         v_status := v_role_desc || ' has deleted';
      END IF;
   END IF;

   IF (v_status IS NOT NULL)
   THEN
      INSERT INTO AUDIT_AUDITOR_DETAILS_HISTORY (AUDIT_HISTORY_SEQ_NO,
                                                 AUDIT_SEQ_NO,
                                                 USER_ID,
                                                 AUDIT_ROLE_ID,
                                                 AUD_SIGNATURE,
                                                 AUD_SIGNATURE_DATE,
                                                 AUD_LEAD_STATUS,
                                                 AUDIT_TYPE_ID,
                                                 AUDIT_HISTORY_STATUS,
                                                 COMPANY_ID,
                                                 USER_INS,
                                                 DATE_INS)
           VALUES (AUDIT_AUDITOR_DTLS_HIST_SEQ_NO.NEXTVAL,
                   v_audit_seq_no,
                   v_user_id,
                   v_audit_role_id,
                   v_aud_signature,
                   v_aud_signature_date,
                   v_aud_lead_status,
                   v_audit_type_id,
                   v_status,
                   v_company_id,
                   v_user_ins,
                   v_date_ins);
   END IF;
END;
/
