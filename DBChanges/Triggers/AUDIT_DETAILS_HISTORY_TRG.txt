DROP TRIGGER AUDIT_STAG_TEST.AUDIT_DETAILS_HISTORY_TRG;

CREATE OR REPLACE TRIGGER AUDIT_STAG_TEST.AUDIT_DETAILS_HISTORY_TRG
   BEFORE INSERT OR UPDATE
   ON AUDIT_STAG_TEST.AUDIT_DETAILS    FOR EACH ROW
DECLARE
   v_status                 VARCHAR2 (100);
   v_audit_status           VARCHAR2 (50);
   v_audit_type_name        VARCHAR2 (50);
   v_new_audit_status       VARCHAR2 (50);
   v_old_certificate_name   VARCHAR2 (50);
   v_new_certificate_name   VARCHAR2 (50);
   v_audit_type_desc        VARCHAR2 (15);
   v_audit_subtype_desc     VARCHAR2 (15);
   v_user_role              VARCHAR2 (15);
BEGIN
  
 IF INSERTING
   THEN
    
      SELECT A.AUDIT_TYPE_DESC, B.AUDIT_SUBTYPE_DESC, C.ROLE_DESC     
      INTO v_audit_type_desc, v_audit_subtype_desc , v_user_role  
        FROM MA_AUDIT_TYPE A,
             MA_AUDIT_SUBTYPE B,
             MA_ROLES C,
            MA_USER_ROLES D
       WHERE     A.AUDIT_TYPE_ID = B.AUDIT_TYPE_ID
             AND A.COMPANY_ID = B.COMPANY_ID
             AND A.COMPANY_ID = C.COMPANY_ID
           AND C.COMPANY_ID = D.COMPANY_ID
          AND C.ROLE_ID = D.ROLE_ID
             AND A.AUDIT_TYPE_ID = :new.AUDIT_TYPE_ID
             AND B.AUDIT_SUB_TYPE_ID = :new.AUDIT_SUB_TYPE_ID         
             AND A.COMPANY_ID = :new.COMPANY_ID 
              AND D.USER_ID = :new.USER_INS;

      v_status :=
            v_audit_type_desc
         || ' audit as created with sub-type '
         || ' '
         || v_audit_subtype_desc
         || ' by '
         || v_user_role;
   END IF;

   IF UPDATING
   THEN
      IF (:old.REVIEW_STATUS <> :new.REVIEW_STATUS)
      THEN
         IF (:old.REVIEW_STATUS = 0 AND :new.REVIEW_STATUS = 1)
         THEN
            v_status := 'Review Initiation';
         ELSIF (:old.REVIEW_STATUS = 1 AND :new.REVIEW_STATUS = 0)
         THEN
            v_status := 'Revert Review';
         ELSIF (:new.REVIEW_STATUS = 2)
         THEN
            v_status := 'REVIEWER APPROVED';
         ELSIF (:new.REVIEW_STATUS = 3)
         THEN
            v_status := 'REVIEWER Rejected';
         END IF;
      END IF;

      IF (:old.LOCK_STATUS <> :new.LOCK_STATUS)
      THEN
         IF (:old.AUDIT_TYPE_ID != 1004)
         THEN
            IF (:old.LOCK_STATUS = 0 AND :new.LOCK_STATUS = 1)
            THEN
               v_status := 'Reterived to Laptop server';
            ELSE
               v_status := 'Synchronize to Center server ';
            END IF;
         END IF;
      END IF;

      IF (:old.AUDIT_STATUS_ID != :new.AUDIT_STATUS_ID)
      THEN
         SELECT ASH.AUDIT_STATUS_DESC, ATH.AUDIT_TYPE_DESC
           INTO v_audit_status, v_audit_type_name
           FROM MA_AUDIT_STATUS ASH, MA_AUDIT_TYPE ATH
          WHERE     ASH.AUDIT_TYPE_ID = ATH.AUDIT_TYPE_ID
                AND ASH.COMPANY_ID = ATH.COMPANY_ID
                AND ASH.AUDIT_STATUS_ID = :old.AUDIT_STATUS_ID
                AND ASH.AUDIT_TYPE_ID = :old.AUDIT_TYPE_ID
                AND ASH.COMPANY_ID = :old.COMPANY_ID;

         SELECT AUDIT_STATUS_DESC
           INTO v_new_audit_status
           FROM MA_AUDIT_STATUS
          WHERE     AUDIT_STATUS_ID = :new.AUDIT_STATUS_ID
                AND AUDIT_TYPE_ID = :new.AUDIT_TYPE_ID
                AND COMPANY_ID = :old.COMPANY_ID;

         IF (   :old.AUDIT_TYPE_ID = 1001
             OR :old.AUDIT_TYPE_ID = 1002
             OR :old.AUDIT_TYPE_ID = 1003)
         THEN
            IF (v_audit_status = 'COMMENCED'
                AND v_new_audit_status = 'COMPLETED')
            THEN
               v_status :=
                     'Status changed from commenced to completed for'
                  || '  '
                  || v_audit_type_name
                  || ' audit';
            ELSIF (v_audit_status = 'COMPLETED'
                   AND v_new_audit_status = 'CLOSED')
            THEN
               v_status :=
                     'Status changed from completed to closed for'
                  || '  '
                  || v_audit_type_name
                  || ' audit';
            ELSIF (v_audit_status = 'COMMENCED'
                   AND v_new_audit_status = 'VOID')
            THEN
               v_status :=
                     'Status changed from commenced to void for'
                  || '  '
                  || v_audit_type_name
                  || ' audit';
            END IF;
         END IF;

         IF (:old.AUDIT_TYPE_ID = 1004 OR :old.AUDIT_TYPE_ID = 1005)
         THEN
            IF (v_audit_status = 'OPEN' AND v_new_audit_status = 'CLOSED')
            THEN
               v_status :=
                     'Status changed from open to closed for'
                  || '  '
                  || v_audit_type_name
                  || ' review';
            ELSIF (v_audit_status = 'OPEN' AND v_new_audit_status = 'VOID')
            THEN
               v_status :=
                     'Status changed from open  to void for'
                  || '  '
                  || v_audit_type_name
                  || ' review';
            END IF;
         END IF;
      END IF;
   END IF;

   IF (TRIM (v_status) IS NOT NULL)
   THEN
      INSERT INTO AUDIT_DETAILS_HISTORY (AUDIT_HISTORY_SEQ_NO,
                                         AUDIT_SEQ_NO,
                                         AUDIT_REPORT_NO,
                                         AUDIT_DATE,
                                         AUDIT_PLACE,
                                         AUDIT_STATUS_ID,
                                         INTERNAL_AUDIT_DATE,
                                         OPEN_MEETING_DATE,
                                         CLOSE_MEETING_DATE,
                                         AUDIT_SUMMARY_ID,
                                         LOCK_STATUS,
                                         VESSEL_IMO_NO,
                                         AUDIT_TYPE_ID,
                                         AUDIT_SUB_TYPE_ID,
                                         COMPANY_IMO_NO,
                                         COMPANY_DOC,
                                         CERT_EXPIRY_DATE,
                                         CERT_ISSUED_DATE,
                                         NARRATIVE_SUMMARY,
                                         CERTIFICATE_NO,
                                         CERTIFICATE_ISSUE_ID,
                                         LOCK_HOLDER,
                                         CERTIFICATE_DATA,
                                         REVIEW_STATUS,
                                         ENDORSE_EXPIRY_DATE,
                                         DOC_FLAG,
                                         CERTIFICATE_VERSION,
                                         AUDIT_HISTORY_STATUS,
                                         COMPANY_ID,
                                         USER_INS,
                                         DATE_INS)
           VALUES (AUDIT_DETAILS_HISTORY_SEQ_NO.NEXTVAL,
                   :new.AUDIT_SEQ_NO,
                   :new.AUDIT_REPORT_NO,
                   :new.AUDIT_DATE,
                   :new.AUDIT_PLACE,
                   :new.AUDIT_STATUS_ID,
                   :new.INTERNAL_AUDIT_DATE,
                   :new.OPEN_MEETING_DATE,
                   :new.CLOSE_MEETING_DATE,
                   :new.AUDIT_SUMMARY_ID,
                   :new.LOCK_STATUS,
                   :new.VESSEL_IMO_NO,
                   :new.AUDIT_TYPE_ID,
                   :new.AUDIT_SUB_TYPE_ID,
                   :new.COMPANY_IMO_NO,
                   :new.COMPANY_DOC,
                   :new.CERT_EXPIRY_DATE,
                   :new.CERT_ISSUED_DATE,
                   :new.NARRATIVE_SUMMARY,
                   :new.CERTIFICATE_NO,
                   :new.CERTIFICATE_ISSUE_ID,
                   :new.LOCK_HOLDER,
                   :new.CERTIFICATE_DATA,
                   :new.REVIEW_STATUS,
                   :new.ENDORSE_EXPIRY_DATE,
                   :new.DOC_FLAG,
                   :new.CERTIFICATE_VERSION,
                   v_status,
                   :new.COMPANY_ID,
                   :new.USER_INS,
                   :new.DATE_INS);
   END IF;
END;
/
