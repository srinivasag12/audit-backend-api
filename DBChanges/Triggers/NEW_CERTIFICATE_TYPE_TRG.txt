DROP TRIGGER AUDIT_STAG_TEST.NEW_CERTIFICATE_TYPE_TRG;

CREATE OR REPLACE TRIGGER AUDIT_STAG_TEST."NEW_CERTIFICATE_TYPE_TRG"   
   BEFORE INSERT OR DELETE OR UPDATE
   ON ma_certificate_issued
   FOR EACH ROW
DECLARE
   v_from                     VARCHAR2 (30) := audit_details_pkg.v_From;
   v_to                       VARCHAR2 (3000);
   v_sub                      VARCHAR2 (500);
   v_body                     VARCHAR2 (1000);
   v_company_id               NUMBER;
   v_certificate_issue_desc   VARCHAR2 (30);
   v_cc                       VARCHAR2 (30);-- := audit_details_pkg.v_admin;
BEGIN
select user_id into v_cc from ma_user_roles where role_id=1002;
   CASE
      WHEN INSERTING
      THEN
         v_certificate_issue_desc := :new.certificate_issue_desc;
         v_company_id := :new.company_id;

         SELECT listagg (user_id, ',') WITHIN GROUP (ORDER BY role_id)
           INTO v_to
           FROM ma_user_roles
          WHERE company_id = 2 AND role_id = 1001;

         SELECT subject,
                REPLACE (
                   body,
                   'New Feature____',
                   'New Feature '
                   || (SELECT v_certificate_issue_desc FROM DUAL))
           INTO v_sub, v_body
           FROM audit_email_dtls
          WHERE email_seq = 12;
 UPDATE MASTER_TABLE_UPDATE SET TABLE_UPDATION=0 WHERE TABLE_NAME='CertificateIssued'; 
         audit_send_mail_prc ('New Certificate Type',
                              v_company_id,
                              v_from,
                              v_to,
                              v_cc,
                              v_sub,
                              v_body);
                              
when updating then
  UPDATE MASTER_TABLE_UPDATE SET TABLE_UPDATION=0 WHERE TABLE_NAME='CertificateIssued';
  when deleting then
  UPDATE MASTER_TABLE_UPDATE SET TABLE_UPDATION=0 WHERE TABLE_NAME='CertificateIssued';                              
      ELSE
         NULL;
   END CASE;
EXCEPTION
   WHEN OTHERS
   THEN
      NULL;
END;
/
