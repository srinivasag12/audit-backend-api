DROP TRIGGER LOCAL_AUDIT_CHANGES.UPDATE_AUDIT_CYCLE;

CREATE OR REPLACE TRIGGER LOCAL_AUDIT_CHANGES.UPDATE_AUDIT_CYCLE
AFTER UPDATE
OF CREDIT_DATE
ON LOCAL_AUDIT_CHANGES.AUDIT_DETAILS 
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
   V_CREDIT_DATE                                DATE;
   V_NEXT_INTERMEDIATE_START                    DATE;
   V_NEXT_INTERMEDIATE_END                      DATE;
   V_NEXT_RENEWAL                               DATE;
   V_USER_INS                                   VARCHAR2 (100);
   V_DATE_INS                                   DATE;
   v_COUNT                                      NUMBER;
   V_AUDIT_DATE                                 DATE;
   V_AUDIT_SUB_TYPE_ID                          NUMBER;
   V_ROLE_ID                                    NUMBER;
   V_AUDIT_SEQ_NO                               NUMBER;
   V_PREV_AUDIT_EXP_DATE                        DATE;
   V_AUDIT_STATUS_ID                            NUMBER;
   V_NEXT_RENEWAL_START                         DATE;
   V_AUDIT_SEQ_NO_TEMP                          NUMBER;
   CYCLE_NEXT_RENEWAL                           AUDIT_CYCLE.NEXT_RENEWAL%TYPE;
   THREE_MONTH_DATE_CYCLE                       DATE;
   V_HISTORY_GEN_NO                             NUMBER;
   V_CYCLE_DELETE                               NUMBER;
   V_INTERMEDIATE_DUE_DATE                      DATE;
   V_NEXT_RENEWAL_DUE_DATE                      DATE;
   V_DATAEXST                                   NUMBER;
   V_HISTORY_GEN_NO_LESS                        NUMBER;
   V_REVIWER                                    NUMBER;
   /* created by cb */
   V_FOLLOW_UP_ENDORSED_SEQ_NO                  NUMBER;
   V_FOLLOW_UP_ENDORSED_AUDIT_ID                NUMBER;
   V_AUDIT_SUBTYPE_ID_ENDORSEMENT_ENDORSEMENT   NUMBER;
   V_RENEWAL_ENDORSEMENT_CYCLE_SEQ_NO           NUMBER;
   V_PREVIOUS_MAX_AUDIT_SEQ_NO                  NUMBER;
   V_MAX_HISTORY_GEN_NO_RENEWAL_ENDORESEMENT  NUMBER;
BEGIN
   /*
  if (:new.CREDIT_DATE is not null and :old.CREDIT_DATE is null) or   (:new.CREDIT_DATE <> :old.CREDIT_DATE)

     */

   SELECT COUNT (*)
     INTO V_REVIWER
     FROM AUDIT_AUDITOR_DETAILS
    WHERE     AUDIT_ROLE_ID = 1003
          AND AUDIT_SEQ_NO = :NEW.AUDIT_SEQ_NO
          AND COMPANY_ID = :NEW.COMPANY_ID
          AND USER_ID = :NEW.USER_INS;



   IF V_REVIWER = 0
   THEN
      IF (:new.CREDIT_DATE IS NOT NULL)
      THEN
         V_CREDIT_DATE := :new.CREDIT_DATE;
         V_USER_INS := :new.USER_INS;
         V_DATE_INS := :new.DATE_INS;
         V_AUDIT_DATE := :new.AUDIT_DATE;
         V_AUDIT_SUB_TYPE_ID := :new.AUDIT_SUB_TYPE_ID;
         V_AUDIT_SEQ_NO := :new.AUDIT_SEQ_NO;

         IF :new.AUDIT_STATUS_ID = 1004
         THEN
            V_AUDIT_STATUS_ID := 1001;
         ELSE
            V_AUDIT_STATUS_ID := :new.AUDIT_STATUS_ID;
         END IF;

         SELECT ROLE_ID
           INTO V_ROLE_ID
           FROM ma_user_roles
          WHERE     USER_ID =                                 /* V_USER_INS */
                             :NEW.USER_INS
                AND COMPANY_ID = :NEW.COMPANY_ID
                AND ROWNUM = 1;


         IF :new.AUDIT_SUB_TYPE_ID = 1002
         THEN
            --using the renewal end date for intermediate dates

            SELECT ADD_MONTHS (V_CREDIT_DATE, 30)
              INTO V_INTERMEDIATE_DUE_DATE
              FROM DUAL;

            SELECT ADD_MONTHS (V_CREDIT_DATE, 60)
              INTO V_NEXT_RENEWAL
              FROM DUAL;

            SELECT V_NEXT_RENEWAL - 1 INTO V_NEXT_RENEWAL FROM DUAL;

            SELECT ADD_MONTHS (V_NEXT_RENEWAL, -36)
              INTO V_NEXT_INTERMEDIATE_START
              FROM DUAL;

            SELECT ADD_MONTHS (V_NEXT_RENEWAL, -24)
              INTO V_NEXT_INTERMEDIATE_END
              FROM DUAL;

            SELECT ADD_MONTHS (V_NEXT_RENEWAL, -30)
              INTO V_INTERMEDIATE_DUE_DATE
              FROM DUAL;

            SELECT ADD_MONTHS (V_NEXT_RENEWAL, -3)
              INTO V_NEXT_RENEWAL_START
              FROM DUAL;

            UPDATE AUDIT_CYCLE
               SET CREDIT_DATE = V_CREDIT_DATE,
                   NEXT_INTERMEDIATE_START = V_NEXT_INTERMEDIATE_START,
                   NEXT_INTERMEDIATE_END = V_NEXT_INTERMEDIATE_END,
                   NEXT_RENEWAL_START = V_NEXT_RENEWAL_START,
                   NEXT_RENEWAL = V_NEXT_RENEWAL,
                   USER_INS = V_USER_INS,
                   DATE_INS = V_DATE_INS,
                   AUDIT_DATE = :NEW.AUDIT_DATE,
                   AUDIT_SUB_TYPE_ID = :NEW.AUDIT_SUB_TYPE_ID,
                   AUDIT_STATUS_ID = V_AUDIT_STATUS_ID
             WHERE     CYCLE_SEQ_NO = :NEW.AUDIT_SEQ_NO
                   AND COMPANY_ID = :NEW.COMPANY_ID
                   AND ROLE_ID = 1001;

            UPDATE AUDIT_CYCLE
               SET USER_INS = V_USER_INS,
                   DATE_INS = V_DATE_INS,
                   AUDIT_DATE = :NEW.AUDIT_DATE,
                   AUDIT_SUB_TYPE_ID = :NEW.AUDIT_SUB_TYPE_ID,
                   AUDIT_STATUS_ID = V_AUDIT_STATUS_ID
             WHERE     COMPANY_ID = :NEW.COMPANY_ID
                   AND                                   /* ROLE_ID <> 1001 */
                       /*commented by cb for manager created audit cycle */
                       ROLE_ID <> 1003
                   AND CYCLE_SEQ_NO = :NEW.AUDIT_SEQ_NO
                   AND COMPANY_ID = :NEW.COMPANY_ID;
         END IF;

         IF :new.AUDIT_SUB_TYPE_ID = 1001
         THEN
            SELECT ADD_MONTHS (V_CREDIT_DATE, 6) INTO V_CREDIT_DATE FROM DUAL;

            SELECT ADD_MONTHS (V_CREDIT_DATE, 30)
              INTO V_INTERMEDIATE_DUE_DATE
              FROM DUAL;



            SELECT ADD_MONTHS (V_CREDIT_DATE, 60)
              INTO V_NEXT_RENEWAL
              FROM DUAL;

            SELECT V_NEXT_RENEWAL - 1 INTO V_NEXT_RENEWAL FROM DUAL;

            SELECT ADD_MONTHS (V_NEXT_RENEWAL, -36)
              INTO V_NEXT_INTERMEDIATE_START
              FROM DUAL;

            SELECT ADD_MONTHS (V_NEXT_RENEWAL, -24)
              INTO V_NEXT_INTERMEDIATE_END
              FROM DUAL;

            SELECT ADD_MONTHS (V_NEXT_RENEWAL, -30)
              INTO V_INTERMEDIATE_DUE_DATE
              FROM DUAL;

            SELECT ADD_MONTHS (V_NEXT_RENEWAL, -3)
              INTO V_NEXT_RENEWAL_START
              FROM DUAL;

            UPDATE AUDIT_CYCLE
               SET CREDIT_DATE = V_CREDIT_DATE,
                   NEXT_INTERMEDIATE_START = V_NEXT_INTERMEDIATE_START,
                   NEXT_INTERMEDIATE_END = V_NEXT_INTERMEDIATE_END,
                   NEXT_RENEWAL = V_NEXT_RENEWAL,
                   INTERMEDIATE_DUE_DATE = V_INTERMEDIATE_DUE_DATE,
                   NEXT_RENEWAL_DUE_DATE = V_NEXT_RENEWAL,
                   NEXT_RENEWAL_START = V_NEXT_RENEWAL_START,
                   USER_INS = V_USER_INS,
                   DATE_INS = V_DATE_INS,
                   AUDIT_DATE = V_AUDIT_DATE,
                   AUDIT_SUB_TYPE_ID = V_AUDIT_SUB_TYPE_ID,
                   AUDIT_STATUS_ID = V_AUDIT_STATUS_ID
             WHERE     CYCLE_SEQ_NO = :NEW.AUDIT_SEQ_NO
                   AND COMPANY_ID = :NEW.COMPANY_ID
                   AND ROLE_ID = 1001;

            UPDATE AUDIT_CYCLE
               SET USER_INS = V_USER_INS,
                   DATE_INS = V_DATE_INS,
                   AUDIT_DATE = V_AUDIT_DATE,
                   AUDIT_SUB_TYPE_ID = V_AUDIT_SUB_TYPE_ID,
                   AUDIT_STATUS_ID = V_AUDIT_STATUS_ID
             WHERE     COMPANY_ID = :NEW.COMPANY_ID
                   AND                                     /*ROLE_ID = 1003 */
                       /*commented by cb for manager created audit cycle */
                       ROLE_ID <> 1003
                   AND CYCLE_SEQ_NO = V_AUDIT_SEQ_NO
                   AND COMPANY_ID = :NEW.COMPANY_ID;
         END IF;



         IF (:new.AUDIT_SUB_TYPE_ID = 1001 OR :new.AUDIT_SUB_TYPE_ID = 1002)
            AND :new.AUDIT_STATUS_ID <> 1004
         THEN
            /* overding the cycle */

            UPDATE AUDIT_CYCLE
               SET CREDIT_DATE = V_CREDIT_DATE,
                   NEXT_INTERMEDIATE_START = V_NEXT_INTERMEDIATE_START,
                   NEXT_INTERMEDIATE_END = V_NEXT_INTERMEDIATE_END,
                   NEXT_RENEWAL = V_NEXT_RENEWAL,
                   NEXT_RENEWAL_START = V_NEXT_RENEWAL_START,
                   INTERMEDIATE_DUE_DATE = V_INTERMEDIATE_DUE_DATE,
                   NEXT_RENEWAL_DUE_DATE = V_NEXT_RENEWAL,
                   CYCLE_SEQ_NO = :NEW.AUDIT_SEQ_NO,
                   USER_INS = V_USER_INS,
                   DATE_INS = V_DATE_INS,
                   AUDIT_DATE = V_AUDIT_DATE,
                   AUDIT_SUB_TYPE_ID = V_AUDIT_SUB_TYPE_ID,
                   AUDIT_STATUS_ID = V_AUDIT_STATUS_ID
             WHERE     VESSEL_IMO_NO = :NEW.VESSEL_IMO_NO
                   AND COMPANY_ID = :NEW.COMPANY_ID
                   AND AUDIT_TYPE_ID = :NEW.AUDIT_TYPE_ID
                   AND ROLE_ID = 1001
                   AND CYCLE_GEN_NO = 0 ;

            UPDATE AUDIT_CYCLE
               SET USER_INS = V_USER_INS,
                   DATE_INS = V_DATE_INS,
                   AUDIT_DATE = V_AUDIT_DATE,
                   AUDIT_SUB_TYPE_ID = V_AUDIT_SUB_TYPE_ID,
                   AUDIT_STATUS_ID = V_AUDIT_STATUS_ID
             WHERE     COMPANY_ID = :NEW.COMPANY_ID
                   AND                                   /* ROLE_ID = 1003  */
                       /*commented by cb for manager created audit cycle */
                       ROLE_ID <> 1003
                   AND VESSEL_IMO_NO = :NEW.VESSEL_IMO_NO
                   AND AUDIT_TYPE_ID = :NEW.AUDIT_TYPE_ID
                   AND CYCLE_GEN_NO = 0;


            UPDATE AUDIT_CYCLE_HISTORY
               SET CREDIT_DATE = V_CREDIT_DATE,
                   NEXT_INTERMEDIATE_START = V_NEXT_INTERMEDIATE_START,
                   NEXT_INTERMEDIATE_END = V_NEXT_INTERMEDIATE_END,
                   NEXT_RENEWAL = V_NEXT_RENEWAL,
                   NEXT_RENEWAL_START = V_NEXT_RENEWAL_START,
                   INTERMEDIATE_DUE_DATE = V_INTERMEDIATE_DUE_DATE,
                   NEXT_RENEWAL_DUE_DATE = V_NEXT_RENEWAL,
                   CYCLE_SEQ_NO = :NEW.AUDIT_SEQ_NO,
                   USER_INS = V_USER_INS,
                   DATE_INS = V_DATE_INS,
                   AUDIT_DATE = V_AUDIT_DATE,
                   AUDIT_SUB_TYPE_ID = V_AUDIT_SUB_TYPE_ID,
                   AUDIT_STATUS_ID = V_AUDIT_STATUS_ID
             WHERE     VESSEL_IMO_NO = :NEW.VESSEL_IMO_NO
                   AND COMPANY_ID = :NEW.COMPANY_ID
                   AND AUDIT_TYPE_ID = :NEW.AUDIT_TYPE_ID
                   AND ROLE_ID = 1001
                   AND COMPANY_ID = :NEW.COMPANY_ID
                   /* change made by cb * interim -> initial -> make initial audit completed -> in audit cycle history the interim data was also displaying as initial  IRI-5151 */
                   AND AUDIT_SEQ_NO = :NEW.AUDIT_SEQ_NO;

            /* change made by cb end */

            UPDATE AUDIT_CYCLE_HISTORY
               SET USER_INS = V_USER_INS,
                   DATE_INS = V_DATE_INS,
                   AUDIT_DATE = V_AUDIT_DATE,
                   AUDIT_SUB_TYPE_ID = V_AUDIT_SUB_TYPE_ID,
                   AUDIT_STATUS_ID = V_AUDIT_STATUS_ID
             WHERE     COMPANY_ID = :NEW.COMPANY_ID
                   AND                                     /*ROLE_ID = 1003 */
                       /*commented by cb for manager created audit cycle */
                       ROLE_ID <> 1003
                   AND VESSEL_IMO_NO = :NEW.VESSEL_IMO_NO
                   AND AUDIT_TYPE_ID = :NEW.AUDIT_TYPE_ID
                   AND COMPANY_ID = :NEW.COMPANY_ID
                   /*line added by cb for the issue no IRI-5397  and IRI-5398*/ 
                  AND AUDIT_SEQ_NO = :NEW.AUDIT_SEQ_NO; 
         END IF;

         DBMS_OUTPUT.PUT_LINE ('V_AUDIT_DATE' || V_AUDIT_DATE);
         DBMS_OUTPUT.PUT_LINE ('V_AUDIT_SUB_TYPE_ID' || V_AUDIT_SUB_TYPE_ID);

         IF (:NEW.AUDIT_SUB_TYPE_ID = 1003 OR :NEW.AUDIT_SUB_TYPE_ID = 1005)
            AND :NEW.AUDIT_STATUS_ID <> 1004
         THEN
            UPDATE AUDIT_CYCLE
               SET AUDIT_STATUS_ID = V_AUDIT_STATUS_ID,
                   DATE_INS = V_DATE_INS,
                   AUDIT_DATE = :NEW.AUDIT_DATE
             WHERE     VESSEL_IMO_NO = :NEW.VESSEL_IMO_NO
                   AND AUDIT_TYPE_ID = :NEW.AUDIT_TYPE_ID
                   AND COMPANY_ID = :NEW.COMPANY_ID
                   AND AUDIT_SEQ_NO = :NEW.AUDIT_SEQ_NO;

            UPDATE AUDIT_CYCLE_HISTORY
               SET AUDIT_STATUS_ID = V_AUDIT_STATUS_ID,
                   DATE_INS = V_DATE_INS,
                   AUDIT_DATE = :NEW.AUDIT_DATE
             WHERE     VESSEL_IMO_NO = :NEW.VESSEL_IMO_NO
                   AND AUDIT_TYPE_ID = :NEW.AUDIT_TYPE_ID
                   AND COMPANY_ID = :NEW.COMPANY_ID
                   AND AUDIT_SEQ_NO = :NEW.AUDIT_SEQ_NO;
         END IF;
      END IF;

      /*  auidt making void  start  void mean 1004*/
      IF :NEW.AUDIT_STATUS_ID = 1004
      THEN
         SELECT MAX (HISTORY_GEN_NO)
           INTO V_HISTORY_GEN_NO
           FROM AUDIT_CYCLE
          WHERE     VESSEL_IMO_NO = :NEW.VESSEL_IMO_NO
                AND AUDIT_TYPE_ID = :NEW.AUDIT_TYPE_ID
                AND COMPANY_ID = :NEW.COMPANY_ID;

         /* commented by cb */
         /*  AND ROWNUM = 1;  */

         SELECT MAX (HISTORY_GEN_NO)
           INTO V_HISTORY_GEN_NO_LESS
           FROM AUDIT_CYCLE
          WHERE     VESSEL_IMO_NO = :NEW.VESSEL_IMO_NO
                AND AUDIT_TYPE_ID = :NEW.AUDIT_TYPE_ID
                AND COMPANY_ID = :NEW.COMPANY_ID
                AND HISTORY_GEN_NO < V_HISTORY_GEN_NO;

         /* commented by cb */
         /* AND ROWNUM = 1;  */

         SELECT COUNT (*)
           INTO V_CYCLE_DELETE
           FROM AUDIT_CYCLE
          WHERE         /* commented by cb CYCLE_SEQ_NO = :NEW.AUDIT_SEQ_NO */
               AUDIT_SEQ_NO = :NEW.AUDIT_SEQ_NO
                AND ROLE_ID = 1001
                AND COMPANY_ID = :NEW.COMPANY_ID;

         DELETE FROM AUDIT_CYCLE
               WHERE /* commented by cb  IRI-5153 CYCLE_SEQ_NO = :NEW.AUDIT_SEQ_NO */
                    AUDIT_SEQ_NO = :NEW.AUDIT_SEQ_NO
                     AND ROLE_ID = 1001
                     AND COMPANY_ID = :NEW.COMPANY_ID;

         SELECT COUNT (*)
           INTO V_DATAEXST
           FROM AUDIT_CYCLE_HISTORY
          WHERE     VESSEL_IMO_NO = :NEW.VESSEL_IMO_NO
                AND AUDIT_TYPE_ID = :NEW.AUDIT_TYPE_ID
                AND COMPANY_ID = :NEW.COMPANY_ID
                AND AUDIT_SEQ_NO = :NEW.AUDIT_SEQ_NO;



         IF     V_CYCLE_DELETE > 0
            AND V_CYCLE_DELETE <> 0
            AND :NEW.AUDIT_SUB_TYPE_ID <> 1004
            /*  commented by chibi AND :NEW.AUDIT_SUB_TYPE_ID <> 1005 */
            AND V_DATAEXST > 0
         THEN
            /*   insert query after delete audit cycle data from  back up table  */

            SELECT MAX (HISTORY_GEN_NO)
              INTO V_HISTORY_GEN_NO_LESS
              FROM AUDIT_CYCLE
             WHERE     VESSEL_IMO_NO = :NEW.VESSEL_IMO_NO
                   AND AUDIT_TYPE_ID = :NEW.AUDIT_TYPE_ID
                   AND COMPANY_ID = :NEW.COMPANY_ID
                   AND HISTORY_GEN_NO < V_HISTORY_GEN_NO;

            /* commented by cb */
            /*  AND ROWNUM = 1;  */

            /* commented by cb  IRI-5153*/
            /* INSERT INTO AUDIT_CYCLE (ITERATOR,
                                      VESSEL_IMO_NO,
                                      VESSEL_ID,
                                      COMPANY_ID,
                                      COMPANY_IMO_NO,
                                      COMPANY_DOC,
                                      DOC_TYPE_NUMBER,
                                      AUDIT_TYPE_ID,
                                      CREDIT_DATE,
                                      NEXT_INTERMEDIATE_START,
                                      NEXT_INTERMEDIATE_END,
                                      NEXT_RENEWAL,
                                      ACTIVE_STATUS,
                                      USER_INS,
                                      DATE_INS,
                                      AUDIT_DATE,
                                      AUDIT_SUB_TYPE_ID,
                                      LEAD_NAME,
                                      ROLE_ID,
                                      SUB_ITERATOR,
                                      AUDIT_STATUS_ID,
                                      CYCLE_SEQ_NO,
                                      SKIPPED,
                                      CYCLE_GEN_NO,
                                      NEXT_RENEWAL_START,
                                      HISTORY_GEN_NO,
                                      NEXT_RENEWAL_DUE_DATE,
                                      INTERMEDIATE_DUE_DATE)
                SELECT ITERATOR,
                       VESSEL_IMO_NO,
                       VESSEL_ID,
                       COMPANY_ID,
                       COMPANY_IMO_NO,
                       COMPANY_DOC,
                       DOC_TYPE_NUMBER,
                       AUDIT_TYPE_ID,
                       CREDIT_DATE,
                       NEXT_INTERMEDIATE_START,
                       NEXT_INTERMEDIATE_END,
                       NEXT_RENEWAL,
                       ACTIVE_STATUS,
                       USER_INS,
                       DATE_INS,
                       AUDIT_DATE,
                       AUDIT_SUB_TYPE_ID,
                       LEAD_NAME,
                       ROLE_ID,
                       SUB_ITERATOR,
                       AUDIT_STATUS_ID,
                       CYCLE_SEQ_NO,
                       SKIPPED,
                       CYCLE_GEN_NO,
                       NEXT_RENEWAL_START,
                       HISTORY_GEN_NO,
                       NEXT_RENEWAL_DUE_DATE,
                       INTERMEDIATE_DUE_DATE
                  FROM AUDIT_CYCLE_HISTORY
                 WHERE     VESSEL_IMO_NO = :NEW.VESSEL_IMO_NO
                       AND AUDIT_TYPE_ID = :NEW.AUDIT_TYPE_ID
                       AND COMPANY_ID = :NEW.COMPANY_ID
                       AND HISTORY_GEN_NO = V_HISTORY_GEN_NO_LESS
                       AND ROWNUM = 1;

             DELETE FROM AUDIT_CYCLE_HISTORY
                   WHERE     VESSEL_IMO_NO = :NEW.VESSEL_IMO_NO
                         AND AUDIT_TYPE_ID = :NEW.AUDIT_TYPE_ID
                         AND COMPANY_ID = :NEW.COMPANY_ID
                         AND HISTORY_GEN_NO = V_HISTORY_GEN_NO */

            /*comment end by cb IRI-5153 */
            /* change by cb starts  IRI-5153*/
            UPDATE AUDIT_CYCLE_HISTORY
               SET DATE_INS = :NEW.DATE_INS,
                   AUDIT_STATUS_ID = :NEW.AUDIT_STATUS_ID,
                   USER_INS = :NEW.USER_INS,
                   ACTIVE_STATUS = 0
             WHERE     VESSEL_IMO_NO = :NEW.VESSEL_IMO_NO
                   AND COMPANY_ID = :NEW.COMPANY_ID
                   AND AUDIT_TYPE_ID = :NEW.AUDIT_TYPE_ID
                   AND AUDIT_SEQ_NO = :NEW.AUDIT_SEQ_NO;

            /*change by cb ends  IRI-5153*/
            /* query written by cb */
            /*  SELECT AUDIT_SEQ_NO, AUDIT_SUB_TYPE_ID
                INTO V_FOLLOW_UP_ENDORSED_SEQ_NO, V_FOLLOW_UP_ENDORSED_AUDIT_ID
                FROM AUDIT_CYCLE_HISTORY
               WHERE     VESSEL_IMO_NO = :NEW.VESSEL_IMO_NO
                     AND AUDIT_TYPE_ID = :NEW.AUDIT_TYPE_ID
                     AND COMPANY_ID = :NEW.COMPANY_ID
                     AND AUDIT_STATUS_ID <> 1004
                     AND AUDIT_SUB_TYPE_ID NOT IN (1003, 1005)
                     AND ORDER BY AUDIT_SEQ_NO DESC
                  AND ROWNUM = 1; */
            /* SELECT AUDIT_SUB_TYPE_ID
              INTO  V_AUDIT_SUBTYPE_ID_ENDORSEMENT_ENDORSEMENT
                FROM (SELECT AUDIT_SUB_TYPE_ID
                FROM AUDIT_CYCLE_HISTORY
               WHERE VESSEL_IMO_NO = :NEW.VESSEL_IMO_NO
               AND AUDIT_TYPE_ID = :NEW.AUDIT_TYPE_ID
               AND COMPANY_ID = :NEW.COMPANY_ID
               AND AUDIT_STATUS_ID <> 1004
              ORDER BY  AUDIT_SEQ_NO DESC)
              WHERE ROWNUM = 1; */

            /* change for manager created audit cycle to be reverted */
            SELECT MAX (AUDIT_SEQ_NO)
              INTO V_PREVIOUS_MAX_AUDIT_SEQ_NO
              FROM AUDIT_CYCLE_HISTORY
             WHERE     AUDIT_STATUS_ID <> 1004
                   AND COMPANY_ID = :NEW.COMPANY_ID
                   AND AUDIT_TYPE_ID = :NEW.AUDIT_TYPE_ID
                   AND VESSEL_IMO_NO = :NEW.VESSEL_IMO_NO;

            IF :NEW.AUDIT_SUB_TYPE_ID IN (1003, 1005)
               AND V_PREVIOUS_MAX_AUDIT_SEQ_NO IS NULL
            THEN
               INSERT INTO AUDIT_CYCLE (ITERATOR,
                                        VESSEL_IMO_NO,
                                        VESSEL_ID,
                                        COMPANY_ID,
                                        COMPANY_IMO_NO,
                                        COMPANY_DOC,
                                        DOC_TYPE_NUMBER,
                                        AUDIT_TYPE_ID,
                                        AUDIT_SEQ_NO,
                                        CREDIT_DATE,
                                        NEXT_INTERMEDIATE_START,
                                        NEXT_INTERMEDIATE_END,
                                        NEXT_RENEWAL,
                                        ACTIVE_STATUS,
                                        USER_INS,
                                        DATE_INS,
                                        AUDIT_DATE,
                                        AUDIT_SUB_TYPE_ID,
                                        LEAD_NAME,
                                        ROLE_ID,
                                        SUB_ITERATOR,
                                        AUDIT_STATUS_ID,
                                        CYCLE_SEQ_NO,
                                        SKIPPED,
                                        CYCLE_GEN_NO,
                                        NEXT_RENEWAL_START,
                                        HISTORY_GEN_NO,
                                        NEXT_RENEWAL_DUE_DATE,
                                        INTERMEDIATE_DUE_DATE)
                  SELECT ITERATOR,
                         VESSEL_IMO_NO,
                         VESSEL_ID,
                         COMPANY_ID,
                         COMPANY_IMO_NO,
                         COMPANY_DOC,
                         DOC_TYPE_NUMBER,
                         AUDIT_TYPE_ID,
                         AUDIT_SEQ_NO,
                         CREDIT_DATE,
                         NEXT_INTERMEDIATE_START,
                         NEXT_INTERMEDIATE_END,
                         NEXT_RENEWAL,
                         ACTIVE_STATUS,
                         USER_INS,
                         DATE_INS,
                         AUDIT_DATE,
                         AUDIT_SUB_TYPE_ID,
                         LEAD_NAME,
                         ROLE_ID,
                         SUB_ITERATOR,
                         AUDIT_STATUS_ID,
                         CYCLE_SEQ_NO,
                         SKIPPED,
                         CYCLE_GEN_NO,
                         NEXT_RENEWAL_START,
                         HISTORY_GEN_NO,
                         NEXT_RENEWAL_DUE_DATE,
                         INTERMEDIATE_DUE_DATE
                    FROM AUDIT_CYCLE_HISTORY
                   WHERE     VESSEL_IMO_NO = :NEW.VESSEL_IMO_NO
                         AND AUDIT_TYPE_ID = :NEW.AUDIT_TYPE_ID
                         AND COMPANY_ID = :NEW.COMPANY_ID
                         AND CYCLE_SEQ_NO = 1;
            END IF;


            /* change start by cb */
            IF V_PREVIOUS_MAX_AUDIT_SEQ_NO IS NOT NULL
            THEN
               INSERT INTO AUDIT_CYCLE (ITERATOR,
                                        VESSEL_IMO_NO,
                                        VESSEL_ID,
                                        COMPANY_ID,
                                        COMPANY_IMO_NO,
                                        COMPANY_DOC,
                                        DOC_TYPE_NUMBER,
                                        AUDIT_TYPE_ID,
                                        AUDIT_SEQ_NO,
                                        CREDIT_DATE,
                                        NEXT_INTERMEDIATE_START,
                                        NEXT_INTERMEDIATE_END,
                                        NEXT_RENEWAL,
                                        ACTIVE_STATUS,
                                        USER_INS,
                                        DATE_INS,
                                        AUDIT_DATE,
                                        AUDIT_SUB_TYPE_ID,
                                        LEAD_NAME,
                                        ROLE_ID,
                                        SUB_ITERATOR,
                                        AUDIT_STATUS_ID,
                                        CYCLE_SEQ_NO,
                                        SKIPPED,
                                        CYCLE_GEN_NO,
                                        NEXT_RENEWAL_START,
                                        HISTORY_GEN_NO,
                                        NEXT_RENEWAL_DUE_DATE,
                                        INTERMEDIATE_DUE_DATE)
                  SELECT ITERATOR,
                         VESSEL_IMO_NO,
                         VESSEL_ID,
                         COMPANY_ID,
                         COMPANY_IMO_NO,
                         COMPANY_DOC,
                         DOC_TYPE_NUMBER,
                         AUDIT_TYPE_ID,
                         AUDIT_SEQ_NO,
                         CREDIT_DATE,
                         NEXT_INTERMEDIATE_START,
                         NEXT_INTERMEDIATE_END,
                         NEXT_RENEWAL,
                         ACTIVE_STATUS,
                         USER_INS,
                         DATE_INS,
                         AUDIT_DATE,
                         AUDIT_SUB_TYPE_ID,
                         LEAD_NAME,
                         ROLE_ID,
                         SUB_ITERATOR,
                         AUDIT_STATUS_ID,
                         CYCLE_SEQ_NO,
                         SKIPPED,
                         CYCLE_GEN_NO,
                         NEXT_RENEWAL_START,
                         HISTORY_GEN_NO,
                         NEXT_RENEWAL_DUE_DATE,
                         INTERMEDIATE_DUE_DATE
                    FROM AUDIT_CYCLE_HISTORY
                   WHERE     VESSEL_IMO_NO = :NEW.VESSEL_IMO_NO
                         AND AUDIT_TYPE_ID = :NEW.AUDIT_TYPE_ID
                         AND COMPANY_ID = :NEW.COMPANY_ID
                         /*  commented by cbAND HISTORY_GEN_NO = V_HISTORY_GEN_NO_LESS */
                         AND                                /* AUDIT_SEQ_NO */
                            CYCLE_SEQ_NO =
                                (SELECT                /*MAX (AUDIT_SEQ_NO) */
                                       MAX (CYCLE_SEQ_NO)
                                   FROM AUDIT_CYCLE_HISTORY
                                  WHERE AUDIT_STATUS_ID <> 1004
                                        AND COMPANY_ID = :NEW.COMPANY_ID
                                        AND AUDIT_TYPE_ID =
                                               :NEW.AUDIT_TYPE_ID
                                        AND VESSEL_IMO_NO =
                                               :NEW.VESSEL_IMO_NO);
            END IF;
         /* if the full term is followed by 2 or more endorsement audits */
             IF ( (:NEW.AUDIT_SUB_TYPE_ID = 1003
                OR :NEW.AUDIT_SUB_TYPE_ID = 1005))
          THEN
             SELECT AUDIT_SUB_TYPE_ID
               INTO V_AUDIT_SUBTYPE_ID_ENDORSEMENT_ENDORSEMENT
               FROM (  SELECT *
                         FROM AUDIT_CYCLE_HISTORY
                        WHERE     VESSEL_IMO_NO = :NEW.VESSEL_IMO_NO
                              AND AUDIT_TYPE_ID = :NEW.AUDIT_TYPE_ID
                              AND COMPANY_ID = :NEW.COMPANY_ID
                              /*AND AUDIT_STATUS_ID <> 1004  */
                              /*AND AUDIT_SEQ_NO <> :NEW.AUDIT_SEQ_NO */
                             /* AND CYCLE_SEQ_NO<> 1 */
                     ORDER BY CYCLE_SEQ_NO DESC)
              WHERE ROWNUM = 1;

             IF (V_AUDIT_SUBTYPE_ID_ENDORSEMENT_ENDORSEMENT IN (1003, 1005) AND V_AUDIT_SUBTYPE_ID_ENDORSEMENT_ENDORSEMENT IS NOT NULL)
             THEN
                UPDATE AUDIT_CYCLE
                   SET CYCLE_SEQ_NO =
                          (SELECT MAX (AUDIT_SEQ_NO)
                             FROM AUDIT_CYCLE_HISTORY
                            WHERE     VESSEL_IMO_NO = :NEW.VESSEL_IMO_NO
                                  AND COMPANY_ID = :NEW.COMPANY_ID
                                  AND AUDIT_TYPE_ID = :NEW.AUDIT_TYPE_ID
                                  AND AUDIT_SUB_TYPE_ID NOT IN (1003, 1005)
                                  AND AUDIT_STATUS_ID <> 1004)
                 WHERE     VESSEL_IMO_NO = :NEW.VESSEL_IMO_NO
                       AND COMPANY_ID = :NEW.COMPANY_ID
                       AND AUDIT_TYPE_ID = :NEW.AUDIT_TYPE_ID
                       AND AUDIT_SEQ_NO =
                              (SELECT MAX (AUDIT_SEQ_NO)
                                 FROM AUDIT_CYCLE
                                WHERE VESSEL_IMO_NO = :NEW.VESSEL_IMO_NO
                                      AND COMPANY_ID = :NEW.COMPANY_ID
                                      AND AUDIT_TYPE_ID =
                                             :NEW.AUDIT_TYPE_ID);
             END IF;
          END IF; 
         END IF;



         SELECT COUNT (*)
           INTO V_DATAEXST
           FROM AUDIT_CYCLE_HISTORY
          WHERE     VESSEL_IMO_NO = :NEW.VESSEL_IMO_NO
                AND AUDIT_TYPE_ID = :NEW.AUDIT_TYPE_ID
                AND COMPANY_ID = :NEW.COMPANY_ID
                AND HISTORY_GEN_NO < V_HISTORY_GEN_NO
                AND HISTORY_GEN_NO <> V_HISTORY_GEN_NO
                AND ROWNUM = 1;

         IF /* commented by cb  V_DATAEXST > 0 AND V_HISTORY_GEN_NO_LESS IS NOT NULL
            AND (  :NEW.AUDIT_SUB_TYPE_ID = 1003
                 OR :NEW.AUDIT_SUB_TYPE_ID = 1005
                 OR :NEW.AUDIT_SUB_TYPE_ID = 1004) */
           :NEW.AUDIT_SUB_TYPE_ID = 1004 AND :NEW.CERTIFICATE_ISSUE_ID <> 1007
         THEN
            UPDATE AUDIT_CYCLE_HISTORY
               SET DATE_INS = :NEW.DATE_INS,
                   AUDIT_STATUS_ID = :NEW.AUDIT_STATUS_ID,
                   USER_INS = :NEW.USER_INS,
                   ACTIVE_STATUS = 0
             WHERE     VESSEL_IMO_NO = :NEW.VESSEL_IMO_NO
                   AND AUDIT_TYPE_ID = :NEW.AUDIT_TYPE_ID
                   AND COMPANY_ID = :NEW.COMPANY_ID
                   AND AUDIT_SEQ_NO = :NEW.AUDIT_SEQ_NO;
         /* commented by cb  UPDATE AUDIT_CYCLE
              SET (ITERATOR,
                   VESSEL_IMO_NO,
                   VESSEL_ID,
                   COMPANY_ID,
                   COMPANY_IMO_NO,
                   COMPANY_DOC,
                   DOC_TYPE_NUMBER,
                   AUDIT_TYPE_ID,
                   AUDIT_SEQ_NO,
                   CREDIT_DATE,
                   NEXT_INTERMEDIATE_START,
                   NEXT_INTERMEDIATE_END,
                   NEXT_RENEWAL,
                   ACTIVE_STATUS,
                   USER_INS,
                   DATE_INS,
                   AUDIT_DATE,
                   AUDIT_SUB_TYPE_ID,
                   LEAD_NAME,
                   ROLE_ID,
                   SUB_ITERATOR,
                   AUDIT_STATUS_ID,
                   SKIPPED,
                   NEXT_RENEWAL_START,
                   HISTORY_GEN_NO,
                   NEXT_RENEWAL_DUE_DATE,
                   INTERMEDIATE_DUE_DATE) =
                     (SELECT ITERATOR,
                             VESSEL_IMO_NO,
                             VESSEL_ID,
                             COMPANY_ID,
                             COMPANY_IMO_NO,
                             COMPANY_DOC,
                             DOC_TYPE_NUMBER,
                             AUDIT_TYPE_ID,
                             NULL,
                             CREDIT_DATE,
                             NEXT_INTERMEDIATE_START,
                             NEXT_INTERMEDIATE_END,
                             NEXT_RENEWAL,
                             ACTIVE_STATUS,
                             USER_INS,
                             DATE_INS,
                             AUDIT_DATE,
                             AUDIT_SUB_TYPE_ID,
                             LEAD_NAME,
                             ROLE_ID,
                             SUB_ITERATOR,
                             AUDIT_STATUS_ID,
                             SKIPPED,
                             NEXT_RENEWAL_START,
                             HISTORY_GEN_NO,
                             NEXT_RENEWAL_DUE_DATE,
                             INTERMEDIATE_DUE_DATE
                        FROM AUDIT_CYCLE_HISTORY
                       WHERE     VESSEL_IMO_NO = :NEW.VESSEL_IMO_NO
                             AND AUDIT_TYPE_ID = :NEW.AUDIT_TYPE_ID
                             AND COMPANY_ID = :NEW.COMPANY_ID
                             AND HISTORY_GEN_NO = V_HISTORY_GEN_NO_LESS
                             AND ROWNUM = 1 )
            WHERE     V_HISTORY_GEN_NO = HISTORY_GEN_NO
                  AND VESSEL_IMO_NO = :NEW.VESSEL_IMO_NO
                  AND AUDIT_TYPE_ID = :NEW.AUDIT_TYPE_ID
                  AND COMPANY_ID = :NEW.COMPANY_ID
                 AND ROWNUM = 1;



           DELETE FROM AUDIT_CYCLE_HISTORY
                 WHERE     VESSEL_IMO_NO = :NEW.VESSEL_IMO_NO
                       AND AUDIT_TYPE_ID = :NEW.AUDIT_TYPE_ID
                       AND COMPANY_ID = :NEW.COMPANY_ID
                       AND HISTORY_GEN_NO = V_HISTORY_GEN_NO; */
         END IF;
         
         IF  :NEW.AUDIT_SUB_TYPE_ID = 1004 AND :NEW.CERTIFICATE_ISSUE_ID = 1007
         
         THEN 
         
          UPDATE AUDIT_CYCLE_HISTORY
               SET DATE_INS = :NEW.DATE_INS,
                   AUDIT_STATUS_ID = :NEW.AUDIT_STATUS_ID,
                   USER_INS = :NEW.USER_INS,
                   ACTIVE_STATUS = 0
             WHERE     VESSEL_IMO_NO = :NEW.VESSEL_IMO_NO
                   AND AUDIT_TYPE_ID = :NEW.AUDIT_TYPE_ID
                   AND COMPANY_ID = :NEW.COMPANY_ID
                   AND AUDIT_SEQ_NO = :NEW.AUDIT_SEQ_NO;
                   
                   
                    INSERT INTO AUDIT_CYCLE (ITERATOR,
                                        VESSEL_IMO_NO,
                                        VESSEL_ID,
                                        COMPANY_ID,
                                        COMPANY_IMO_NO,
                                        COMPANY_DOC,
                                        DOC_TYPE_NUMBER,
                                        AUDIT_TYPE_ID,
                                        AUDIT_SEQ_NO,
                                        CREDIT_DATE,
                                        NEXT_INTERMEDIATE_START,
                                        NEXT_INTERMEDIATE_END,
                                        NEXT_RENEWAL,
                                        ACTIVE_STATUS,
                                        USER_INS,
                                        DATE_INS,
                                        AUDIT_DATE,
                                        AUDIT_SUB_TYPE_ID,
                                        LEAD_NAME,
                                        ROLE_ID,
                                        SUB_ITERATOR,
                                        AUDIT_STATUS_ID,
                                        CYCLE_SEQ_NO,
                                        SKIPPED,
                                        CYCLE_GEN_NO,
                                        NEXT_RENEWAL_START,
                                        HISTORY_GEN_NO,
                                        NEXT_RENEWAL_DUE_DATE,
                                        INTERMEDIATE_DUE_DATE)
                  SELECT ITERATOR,
                         VESSEL_IMO_NO,
                         VESSEL_ID,
                         COMPANY_ID,
                         COMPANY_IMO_NO,
                         COMPANY_DOC,
                         DOC_TYPE_NUMBER,
                         AUDIT_TYPE_ID,
                         AUDIT_SEQ_NO,
                         CREDIT_DATE,
                         NEXT_INTERMEDIATE_START,
                         NEXT_INTERMEDIATE_END,
                         NEXT_RENEWAL,
                         ACTIVE_STATUS,
                         USER_INS,
                         DATE_INS,
                         AUDIT_DATE,
                         AUDIT_SUB_TYPE_ID,
                         LEAD_NAME,
                         ROLE_ID,
                         SUB_ITERATOR,
                         AUDIT_STATUS_ID,
                         CYCLE_SEQ_NO,
                         SKIPPED,
                         CYCLE_GEN_NO,
                         NEXT_RENEWAL_START,
                         HISTORY_GEN_NO,
                         NEXT_RENEWAL_DUE_DATE,
                         INTERMEDIATE_DUE_DATE
                    FROM AUDIT_CYCLE_HISTORY
                   WHERE     VESSEL_IMO_NO = :NEW.VESSEL_IMO_NO
                         AND AUDIT_TYPE_ID = :NEW.AUDIT_TYPE_ID
                         AND COMPANY_ID = :NEW.COMPANY_ID
                         AND  CYCLE_SEQ_NO =
                                (SELECT MAX (CYCLE_SEQ_NO)
                                   FROM AUDIT_CYCLE_HISTORY
                                  WHERE AUDIT_STATUS_ID <> 1004
                                        AND COMPANY_ID = :NEW.COMPANY_ID
                                        AND AUDIT_TYPE_ID =
                                               :NEW.AUDIT_TYPE_ID
                                        AND VESSEL_IMO_NO =
                                               :NEW.VESSEL_IMO_NO);
         
         
         END IF;
      END IF;

      /*  auidt making void  end */
         


      IF     :new.AUDIT_SUB_TYPE_ID = 1004
         AND :new.CREDIT_DATE IS NOT NULL
         AND :NEW.CERTIFICATE_ISSUE_ID IS NOT NULL
         AND (:NEW.CERTIFICATE_ISSUE_ID = 1002
              OR (:NEW.CERTIFICATE_ISSUE_ID = 1008 AND V_ROLE_ID = 1001))
      THEN
         SELECT MAX (NEXT_RENEWAL)
           INTO V_PREV_AUDIT_EXP_DATE
           FROM AUDIT_CYCLE
          WHERE     VESSEL_IMO_NO = :NEW.VESSEL_IMO_NO
                AND AUDIT_TYPE_ID = :NEW.AUDIT_TYPE_ID
                AND CYCLE_SEQ_NO != :NEW.AUDIT_SEQ_NO
                AND COMPANY_ID = :NEW.COMPANY_ID;

         /*  Dierect Inytermeadite and renewal scenirio Start */
         IF V_PREV_AUDIT_EXP_DATE IS NULL
         THEN
            SELECT ADD_MONTHS (:new.CREDIT_DATE, 60)
              INTO V_PREV_AUDIT_EXP_DATE
              FROM DUAL;
         END IF;

         /*  Dierect Inytermeadite and renewal scenirio End  */

         SELECT ADD_MONTHS (V_PREV_AUDIT_EXP_DATE, -3)
           INTO THREE_MONTH_DATE_CYCLE
           FROM DUAL;



         IF :NEW.CREDIT_DATE <= THREE_MONTH_DATE_CYCLE
            AND :NEW.CREDIT_DATE <> THREE_MONTH_DATE_CYCLE
         THEN
            SELECT ADD_MONTHS (:new.CREDIT_DATE, 60)
              INTO V_NEXT_RENEWAL
              FROM DUAL;

            SELECT V_NEXT_RENEWAL - 1 INTO V_NEXT_RENEWAL FROM DUAL;
         ELSE
            ---SELECT  NEXT_RENEWAL INTO THREE_MONTH_DATE_CYCLE  FROM AUDIT_CYCLE WHERE VESSEL_IMO_NO=:NEW.VESSEL_IMO_NO  AND AUDIT_TYPE_ID=:NEW.AUDIT_TYPE_ID  and  ROWNUM=1  order by  NEXT_RENEWAL desc;
            SELECT ADD_MONTHS (V_PREV_AUDIT_EXP_DATE, 60)
              INTO V_NEXT_RENEWAL
              FROM DUAL;
         END IF;


         SELECT ADD_MONTHS (V_NEXT_RENEWAL, -36)
           INTO V_NEXT_INTERMEDIATE_START
           FROM DUAL;


         SELECT ADD_MONTHS (V_NEXT_RENEWAL, -24)
           INTO V_NEXT_INTERMEDIATE_END
           FROM DUAL;


         SELECT ADD_MONTHS (V_NEXT_RENEWAL, -3)
           INTO V_NEXT_RENEWAL_START
           FROM DUAL;

         SELECT ADD_MONTHS (:NEW.CREDIT_DATE, 30)
           INTO V_INTERMEDIATE_DUE_DATE
           FROM DUAL;

         SELECT ADD_MONTHS (V_NEXT_RENEWAL, -30)
           INTO V_INTERMEDIATE_DUE_DATE
           FROM DUAL;



         UPDATE AUDIT_CYCLE
            SET CREDIT_DATE = :NEW.CREDIT_DATE,
                NEXT_INTERMEDIATE_START = V_NEXT_INTERMEDIATE_START,
                NEXT_INTERMEDIATE_END = V_NEXT_INTERMEDIATE_END,
                AUDIT_STATUS_ID = V_AUDIT_STATUS_ID,
                NEXT_RENEWAL = V_NEXT_RENEWAL,
                NEXT_RENEWAL_START = V_NEXT_RENEWAL_START,
                INTERMEDIATE_DUE_DATE = V_INTERMEDIATE_DUE_DATE,
                NEXT_RENEWAL_DUE_DATE = V_NEXT_RENEWAL,
                AUDIT_DATE = :NEW.AUDIT_DATE
          WHERE     VESSEL_IMO_NO = :NEW.VESSEL_IMO_NO
                AND AUDIT_TYPE_ID = :NEW.AUDIT_TYPE_ID
                AND COMPANY_ID = :NEW.COMPANY_ID
                AND ROLE_ID <> 1003
                AND ROLE_ID <> 1002
                AND CYCLE_SEQ_NO = :NEW.AUDIT_SEQ_NO;

         UPDATE AUDIT_CYCLE_HISTORY
            SET CREDIT_DATE = :NEW.CREDIT_DATE,
                NEXT_INTERMEDIATE_START = V_NEXT_INTERMEDIATE_START,
                NEXT_INTERMEDIATE_END = V_NEXT_INTERMEDIATE_END,
                /*change made by chibi  initial -> renewal -> make renewal void -> check in the audit cycle history table renewal audit status is not getting updated to void  IRI-5152*/
                /*  AUDIT_STATUS_ID = V_AUDIT_STATUS_ID, */
                AUDIT_STATUS_ID = :new.AUDIT_STATUS_ID,
                /*change end by chibi */
                NEXT_RENEWAL = V_NEXT_RENEWAL,
                NEXT_RENEWAL_START = V_NEXT_RENEWAL_START,
                INTERMEDIATE_DUE_DATE = V_INTERMEDIATE_DUE_DATE,
                NEXT_RENEWAL_DUE_DATE = V_NEXT_RENEWAL,
                AUDIT_DATE = :NEW.AUDIT_DATE
          WHERE     VESSEL_IMO_NO = :NEW.VESSEL_IMO_NO
                AND AUDIT_TYPE_ID = :NEW.AUDIT_TYPE_ID
                AND COMPANY_ID = :NEW.COMPANY_ID
                AND ROLE_ID <> 1003
                AND ROLE_ID <> 1002
                AND CYCLE_SEQ_NO = :NEW.AUDIT_SEQ_NO;
      END IF;

      /* renewal endoresement from lead */

      IF     :new.AUDIT_SUB_TYPE_ID = 1004
         AND :new.CREDIT_DATE IS NOT NULL
         AND :NEW.CERTIFICATE_ISSUE_ID IS NOT NULL
         AND (:NEW.CERTIFICATE_ISSUE_ID = 1007 AND V_ROLE_ID = 1001)
      THEN
      
         SELECT CYCLE_SEQ_NO
           INTO V_RENEWAL_ENDORSEMENT_CYCLE_SEQ_NO
           FROM AUDIT_CYCLE
          WHERE     AUDIT_SEQ_NO = :NEW.AUDIT_SEQ_NO
                AND VESSEL_IMO_NO = :NEW.VESSEL_IMO_NO
                AND COMPANY_ID = :NEW.COMPANY_ID
                AND AUDIT_TYPE_ID = :NEW.AUDIT_TYPE_ID;

         IF (V_RENEWAL_ENDORSEMENT_CYCLE_SEQ_NO = :NEW.AUDIT_SEQ_NO)
         THEN
            DELETE FROM AUDIT_CYCLE
                  WHERE     VESSEL_IMO_NO = :NEW.VESSEL_IMO_NO
                        AND AUDIT_TYPE_ID = :NEW.AUDIT_TYPE_ID
                        AND COMPANY_ID = :NEW.COMPANY_ID
                        AND CYCLE_SEQ_NO = :NEW.AUDIT_SEQ_NO;
                        
                        SELECT MAX(HISTORY_GEN_NO)
                        INTO V_MAX_HISTORY_GEN_NO_RENEWAL_ENDORESEMENT
                        FROM AUDIT_CYCLE
                        WHERE VESSEL_IMO_NO = :NEW.VESSEL_IMO_NO
                        AND AUDIT_TYPE_ID = :NEW.AUDIT_TYPE_ID
                        AND COMPANY_ID = :NEW.COMPANY_ID;


            UPDATE AUDIT_CYCLE
               SET AUDIT_SEQ_NO = :NEW.AUDIT_SEQ_NO,
                   AUDIT_DATE = :NEW.AUDIT_DATE,
                   AUDIT_SUB_TYPE_ID = :NEW.AUDIT_SUB_TYPE_ID,
                   SUB_ITERATOR = 4,
                   AUDIT_STATUS_ID = :NEW.AUDIT_STATUS_ID,
                   USER_INS = :NEW.USER_INS,
                   ROLE_ID = 1001,
                   DATE_INS = :NEW.DATE_INS,
                  /* LEAD_NAME = V_LEAD_NAME, */
                   HISTORY_GEN_NO =  V_MAX_HISTORY_GEN_NO_RENEWAL_ENDORESEMENT+1
             WHERE     VESSEL_IMO_NO = :NEW.VESSEL_IMO_NO
                   AND AUDIT_TYPE_ID = :NEW.AUDIT_TYPE_ID
                   AND COMPANY_ID = :NEW.COMPANY_ID
                   AND CYCLE_SEQ_NO =
                          (SELECT MAX (CYCLE_SEQ_NO)
                             FROM AUDIT_CYCLE
                            WHERE     VESSEL_IMO_NO = :NEW.VESSEL_IMO_NO
                                  AND AUDIT_TYPE_ID = :NEW.AUDIT_TYPE_ID
                                  AND COMPANY_ID = :NEW.COMPANY_ID /*  AND ROWNUM = 1 */
                                                                  )
                   AND CYCLE_GEN_NO =
                          (SELECT MAX (CYCLE_GEN_NO)
                             FROM AUDIT_CYCLE
                            WHERE     VESSEL_IMO_NO = :NEW.VESSEL_IMO_NO
                                  AND AUDIT_TYPE_ID = :NEW.AUDIT_TYPE_ID
                                  AND COMPANY_ID = :NEW.COMPANY_ID /*  AND ROWNUM = 1*/
                                                                  );
                                                                  
                 UPDATE AUDIT_CYCLE_HISTORY 
                 SET   CREDIT_DATE = :NEW.CREDIT_DATE,
                 DATE_INS = :NEW.DATE_INS,
                 AUDIT_DATE = :NEW.AUDIT_DATE,
                 AUDIT_STATUS_ID = :NEW.AUDIT_STATUS_ID,
                 CYCLE_GEN_NO = (SELECT MAX(CYCLE_GEN_NO)
                                                 FROM AUDIT_CYCLE_HISTORY
                                                 WHERE VESSEL_IMO_NO = :NEW.VESSEL_IMO_NO
                                                 AND AUDIT_TYPE_ID = :NEW.AUDIT_TYPE_ID
                                                 AND COMPANY_ID = :NEW.AUDIT_TYPE_ID 
                                                 AND AUDIT_STATUS_ID <> 1004)
                   WHERE VESSEL_IMO_NO = :NEW.VESSEL_IMO_NO
                   AND AUDIT_TYPE_ID = :NEW.AUDIT_TYPE_ID
                   AND COMPANY_ID = :NEW.COMPANY_ID
                   AND AUDIT_SEQ_NO = (SELECT MAX(AUDIT_SEQ_NO)
                                                            FROM AUDIT_CYCLE_HISTORY
                                                            WHERE VESSEL_IMO_NO = :NEW.VESSEL_IMO_NO
                                                            AND AUDIT_TYPE_ID = :NEW.AUDIT_TYPE_ID
                                                            AND COMPANY_ID = :NEW.AUDIT_TYPE_ID 
                                                            AND AUDIT_STATUS_ID <> 1004);
                                                         
                          UPDATE AUDIT_CYCLE_HISTORY   
                          SET (NEXT_INTERMEDIATE_START,
                   NEXT_INTERMEDIATE_END,
                   NEXT_RENEWAL,
                   NEXT_RENEWAL_START,
                   INTERMEDIATE_DUE_DATE,
                   NEXT_RENEWAL_DUE_DATE )=
                   (SELECT  NEXT_INTERMEDIATE_START,
                   NEXT_INTERMEDIATE_END,
                   NEXT_RENEWAL,
                   NEXT_RENEWAL_START,
                   INTERMEDIATE_DUE_DATE,
                   NEXT_RENEWAL_DUE_DATE
                   FROM AUDIT_CYCLE
                   WHERE VESSEL_IMO_NO = :NEW.VESSEL_IMO_NO
                   AND AUDIT_TYPE_ID = :NEW.AUDIT_TYPE_ID
                   AND COMPANY_ID = :NEW.COMPANY_ID
                   AND AUDIT_SEQ_NO = (SELECT MAX(AUDIT_SEQ_NO)
                                                         FROM AUDIT_CYCLE
                                                WHERE VESSEL_IMO_NO = :NEW.VESSEL_IMO_NO
                                               AND AUDIT_TYPE_ID = :NEW.AUDIT_TYPE_ID
                                               AND COMPANY_ID = :NEW.COMPANY_ID  ));            
                                                                  
                                                                  
         END IF;


         IF (V_RENEWAL_ENDORSEMENT_CYCLE_SEQ_NO <> :NEW.AUDIT_SEQ_NO)
         THEN
            UPDATE AUDIT_CYCLE
               SET AUDIT_STATUS_ID = V_AUDIT_STATUS_ID,
                   DATE_INS = V_DATE_INS,
                   AUDIT_DATE = :NEW.AUDIT_DATE
             WHERE     VESSEL_IMO_NO = :NEW.VESSEL_IMO_NO
                   AND AUDIT_TYPE_ID = :NEW.AUDIT_TYPE_ID
                   AND COMPANY_ID = :NEW.COMPANY_ID
                   AND AUDIT_SEQ_NO = :NEW.AUDIT_SEQ_NO;

            UPDATE AUDIT_CYCLE_HISTORY
               SET AUDIT_STATUS_ID = V_AUDIT_STATUS_ID,
                   DATE_INS = V_DATE_INS,
                   AUDIT_DATE = :NEW.AUDIT_DATE
             WHERE     VESSEL_IMO_NO = :NEW.VESSEL_IMO_NO
                   AND AUDIT_TYPE_ID = :NEW.AUDIT_TYPE_ID
                   AND COMPANY_ID = :NEW.COMPANY_ID
                   AND AUDIT_SEQ_NO = :NEW.AUDIT_SEQ_NO;
         END IF;
      END IF;
   /*  select
   IF :NEW.AUDIT_STATUS_ID=1004
   THEN
   UPDATE AUDIT_CYCLE SET   DATE_INS=V_DATE_INS, AUDIT_DATE='' ,AUDIT_SUB_TYPE_ID='' , AUDIT_STATUS_ID = '' , AUDIT_SEQ_NO=''  WHERE COMPANY_ID=:NEW.COMPANY_ID  AND AUDIT_TYPE_ID =:NEW.AUDIT_TYPE_ID   AND AUDIT_SEQ_NO=:NEW.AUDIT_SEQ_NO AND ROLE_ID <> 1001;

   DELETE FROM AUDIT_CYCLE WHERE AUDIT_SEQ_NO =:NEW.AUDIT_SEQ_NO AND ROLE_ID = 1001;

   END IF

   ;
   */
   END IF;
END;
/
