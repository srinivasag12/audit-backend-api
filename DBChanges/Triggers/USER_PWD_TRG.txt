DROP TRIGGER AUDIT_STAG_TEST.USER_PWD_TRG;

CREATE OR REPLACE TRIGGER AUDIT_STAG_TEST."USER_PWD_TRG"   
   for insert or update 
   ON AUDIT_STAG_TEST.MA_USERS    --FOR EACH ROW
compound trigger
   v_subject   varchar2 (1000);
   v_to                     VARCHAR2 (100);
   v_bdy                    VARCHAR2 (1000);
   v_body      varchar2 (30000);
   v_company_id     number(8);
   v_cc                     VARCHAR2 (100);-- := AUDIT_DETAILS_PKG.V_ADMIN;
   v_from                   VARCHAR2 (30)  := audit_details_pkg.v_From;
   v_active_status         varchar2(10);
   v_isps_cert                   varchar2(10);
   v_app_url                 varchar2(50) ; 
   v_role_id number;
  
before  each row is
begin

select  user_id into v_cc from ma_user_roles where role_id=1002;

if inserting then
SELECT a.subject, a.body
          INTO v_subject, v_bdy
          FROM audit_email_dtls a
          WHERE email_seq = 20;        

        IF :NEW.ACTIVE_STATUS = 0 THEN
            v_active_status := 'NO';
        ELSE
            v_active_status := 'YES';
        END IF;
        
        IF :NEW.ISPS_REVIEW = 0 THEN
            v_isps_cert := 'NO';
        ELSE
            v_isps_cert := 'YES';
        END IF;
        
           
        v_app_url := AUDIT_DETAILS_PKG.V_APP_URL;
          
        SELECT muliple_replace_fun (
          v_bdy,
          NEW t_text ('Application URL is _________',
                               'Password is ________.',
                               'Email ID:____________',
                               'Active Status:  Yes/No',
                               'ISPS Certified: Yes/No',
                               'Role (s): ____________ ',
                               'ID: _________________'),
                   NEW t_text ('Application URL is :' || v_app_url,
                               'Password is :' || 'demo',
                               'Email ID: ' || :new.USER_ID,
                               'Active Status:' || v_active_status,
                               'ISPS Certified:'|| v_isps_cert,
                               'Role (s):'||role_desc,
                               'ID:'|| :old.SEQUENCE_NUMBER))
                    INTO v_body FROM (SELECT (SELECT urole.ROLE_DESC from MA_ROLES urole
                                            where urole.ROLE_ID = v_role_id and urole.COMPANY_ID = v_company_id)
                                            role_desc
                                            FROM DUAL) test;
                    --FROM (SELECT FROM DUAL) test;
                                             
                    v_to := :NEW.USER_ID;
                    
                    v_cc := AUDIT_DETAILS_PKG.V_ADMIN;
                                    
                    audit_send_mail_prc ('User Created ' || :NEW.USER_ID ,
                              v_company_id,
                              v_from,
                              v_to,
                              v_cc,
                              v_subject,
                              v_body);

end if;

if  :new.password<>:old.password then

         select a.subject, a.body
           into v_subject, v_body
           from audit_email_dtls a
          where email_seq = 11;
          
         audit_send_mail_prc ('Password change',       --:new.SEQUENCE_NUMBER,
                              :new.company_id,
                              'iri@bsolsystems.com',--AUDIT_DETAILS_PKG.v_from, -- from
                              :old.user_id, --to
                              null, --cc
                              v_subject,
                              v_body);          

end if;

--if :new.verification_code<>:old.verification_code then
--
--         select a.subject, a.body
--           into v_subject, v_body
--           from audit_email_dtls a
--          where email_seq = 17;
--          
--         AUDIT_SEND_MAIL_PRC ('Forgot Password',
--                              :new.company_id,
--                              'iri@bsolsystems.com',--AUDIT_DETAILS_PKG.v_from, --from
--                               :old.user_id, --to
--                                null, --cc
--                              v_subject,
--                              v_body);
--
--end if;

end before each row; 

end;
/
