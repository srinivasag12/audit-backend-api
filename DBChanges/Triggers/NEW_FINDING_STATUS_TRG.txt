DROP TRIGGER AUDIT_STAG_TEST.NEW_FINDING_STATUS_TRG;

CREATE OR REPLACE TRIGGER AUDIT_STAG_TEST."NEW_FINDING_STATUS_TRG"   
   BEFORE INSERT OR DELETE OR UPDATE
   ON ma_findings_status
   FOR EACH ROW
DECLARE
   v_from                  VARCHAR2 (30) := audit_details_pkg.v_From;
   v_to                    VARCHAR2 (3000) ;
   v_sub                   VARCHAR2 (500);
   v_body                  VARCHAR2 (1000);
   v_company_id            NUMBER;
   v_finding_status_desc   VARCHAR2 (30);
   v_cc                    VARCHAR2 (30);-- := audit_details_pkg.v_admin;
BEGIN
select user_id  into v_cc from ma_user_roles where role_id=1002;
   CASE
      WHEN INSERTING
      THEN
         v_finding_status_desc := :new.finding_status_desc;
         v_company_id := :new.company_id;

         SELECT listagg (user_id, ',') WITHIN GROUP (ORDER BY role_id)
           INTO v_to
           FROM ma_user_roles
          WHERE company_id = 2 AND role_id = 1001;

         SELECT subject,
                REPLACE (
                   body,
                   'New Feature____',
                   'New Feature ' || (SELECT v_finding_status_desc FROM DUAL))
           INTO v_sub, v_body
           FROM audit_email_dtls
          WHERE email_seq = 12;
UPDATE MASTER_TABLE_UPDATE SET TABLE_UPDATION=0 WHERE TABLE_NAME='FindingsStatus';
         audit_send_mail_prc ('New Findings Status',
                              v_company_id,
                              v_from,
                              v_to,
                              v_cc,
                              v_sub,
                              v_body);
                              
                              WHEN DELETING THEN
UPDATE MASTER_TABLE_UPDATE SET TABLE_UPDATION=0 WHERE TABLE_NAME='FindingsStatus';
WHEN UPDATING THEN
UPDATE MASTER_TABLE_UPDATE SET TABLE_UPDATION=0 WHERE TABLE_NAME='FindingsStatus';
      ELSE
         NULL;
   END CASE;
EXCEPTION
   WHEN OTHERS
   THEN
      NULL;
END;
/
