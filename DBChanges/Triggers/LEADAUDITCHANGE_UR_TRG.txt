DROP TRIGGER AUDIT_STAG_TEST.LEADAUDITCHANGE_UR_TRG;

CREATE OR REPLACE TRIGGER AUDIT_STAG_TEST.LeadAuditChange_UR_Trg
   BEFORE DELETE OR INSERT
   ON AUDIT_STAG_TEST.AUDIT_AUDITOR_DETAILS    FOR EACH ROW
DISABLE
DECLARE
   v_from             VARCHAR2 (50) := audit_details_pkg.v_From;
   v_to               VARCHAR2 (100);
   v_sub              VARCHAR2 (1000);
   v_subject          VARCHAR2 (1000);
   v_body             VARCHAR2 (1000);
   v_bdy              VARCHAR2 (1000);
   v_flag             CHAR (1);
   v_old_lead         VARCHAR (30);
   v_cc               VARCHAR2 (100);-- := AUDIT_DETAILS_PKG.V_ADMIN;
   v_new_lead         VARCHAR2 (1000);
   v_vessel_imo       VARCHAR2 (30);
   v_audit_type       VARCHAR2 (30);
   v_audit_sub_type   VARCHAR2 (30);
   v_role_id          NUMBER (8);
   audit_desc_msg     VARCHAR2 (20);
   v_admin varchar2(200);
   v_company_id number;

   PRAGMA AUTONOMOUS_TRANSACTION;
BEGIN
v_company_id:=:old.company_id;
 SELECT listAgg (user_id,',') WITHIN GROUP (ORDER BY role_id ASC)
     INTO v_admin
     FROM MA_USER_ROLES USRL
    WHERE USRL.ROLE_ID = 1002 and company_id=v_company_id;
  v_cc :=v_admin;
   IF DELETING
   THEN
      IF :OLD.audit_role_id = 1001 AND :OLD.AUD_LEAD_STATUS = 1
      THEN
         --SELECT COUNT(*) INTO v_role_id FROM MA_USER_ROLES USRL WHERE USRL.USER_ID = :new.USER_INS AND USRL.ROLE_ID = 1002;

         --IF v_role_id > 0  THEN


         SELECT VESSEL_IMO_NO, AUDIT_SUB_TYPE_ID
           INTO v_vessel_imo, v_audit_sub_type
           FROM AUDIT_DETAILS
          WHERE     AUDIT_SEQ_NO = :OLD.AUDIT_SEQ_NO
                AND COMPANY_ID = :OLD.COMPANY_ID
                AND AUDIT_TYPE_ID = :OLD.AUDIT_TYPE_ID;

         SELECT subject, body
           INTO v_sub, v_bdy
           FROM audit_email_dtls
          WHERE email_seq = 13;

         IF :old.AUDIT_TYPE_ID IN (1004, 1005)
         THEN
            audit_desc_msg := 'Review';
         ELSIF :old.AUDIT_TYPE_ID IN (1003)
         THEN
            audit_desc_msg := 'Inspection';
         ELSE
            audit_desc_msg := 'Audit';
         END IF;

         SELECT muliple_replace_fun (
                   v_sub,
                   NEW t_text ('Audit ___', 'IMO No.___'),
                   NEW t_text (
                          audit_desc_msg || ' Type: ' || audit_type_desc,
                          'IMO No.:' || v_vessel_imo)),
                muliple_replace_fun (
                   v_bdy,
                   NEW t_text ('Audit Sub Type:___,',
                               'Audit Type: ___,',
                               'IMO No.___',
                               'from __(Old )__ to ___(New)___'),
                   NEW t_text (
                             audit_desc_msg
                          || ' Subtype: '
                          || audit_subtype_desc,
                          audit_desc_msg || ' Type: ' || audit_type_desc,
                          'IMO No.: ' || v_vessel_imo,
                          ' from ' || user_name))
           INTO v_subject, v_body
           FROM (SELECT (SELECT AUDIT_TYPE_DESC
                           FROM MA_AUDIT_TYPE
                          WHERE AUDIT_TYPE_ID = :OLD.AUDIT_TYPE_ID)
                           audit_type_desc,
                        (SELECT AUDIT_SUBTYPE_DESC
                           FROM MA_AUDIT_SUBTYPE
                          WHERE AUDIT_TYPE_ID = :OLD.AUDIT_TYPE_ID
                                AND AUDIT_SUB_TYPE_ID = v_audit_sub_type)
                           audit_subtype_desc,
                        (SELECT first_name || ' ' || last_name
                           FROM ma_users mu
                          WHERE mu.user_id = :OLD.USER_ID
                                AND mu.company_id = :OLD.COMPANY_ID)
                           user_name
                   FROM DUAL) test;

         SELECT listagg (b.user_id, ',')
                   WITHIN GROUP (ORDER BY b.sequence_number)
           INTO v_to
           FROM ma_users b
          WHERE     :OLD.user_id = b.user_id
                AND :OLD.company_id = b.company_id
                AND :OLD.audit_role_id = 1001;

         -- SELECT  USER_ID INTO v_to FROM ma_users WHERE :OLD.USER_ID = USER_ID AND  :OLD.COMPANY_ID = COMPANY_ID;

         audit_send_mail_prc ('LEAD AUDITOR CHANGE',
                              :OLD.company_id,
                              v_from,
                              v_to,
                              v_cc,
                              v_subject,
                              v_body);
      -- END IF;

      END IF;
   END IF;

   IF INSERTING
   THEN
      --SELECT COUNT(*) INTO v_role_id FROM MA_USER_ROLES USRL WHERE USRL.USER_ID = :NEW.USER_INS AND USRL.ROLE_ID = 1002;

      IF :NEW.audit_role_id = 1001 AND :NEW.AUD_LEAD_STATUS = 1
      THEN
         SELECT VESSEL_IMO_NO, AUDIT_SUB_TYPE_ID
           INTO v_vessel_imo, v_audit_sub_type
           FROM AUDIT_DETAILS
          WHERE     AUDIT_SEQ_NO = :NEW.AUDIT_SEQ_NO
                AND COMPANY_ID = :NEW.COMPANY_ID
                AND AUDIT_TYPE_ID = :NEW.AUDIT_TYPE_ID;

         SELECT subject, body
           INTO v_sub, v_bdy
           FROM audit_email_dtls
          WHERE email_seq = 13;

         IF :NEW.AUDIT_TYPE_ID IN (1004, 1005)
         THEN
            audit_desc_msg := 'Review';
         ELSIF :NEW.AUDIT_TYPE_ID IN (1003)
         THEN
            audit_desc_msg := 'Inspection';
         ELSE
            audit_desc_msg := 'Audit';
         END IF;

         SELECT muliple_replace_fun (
                   v_sub,
                   NEW t_text ('Audit ___', 'IMO No.___'),
                   NEW t_text (
                          audit_desc_msg || ' Type: ' || audit_type_desc,
                          'IMO No.:' || v_vessel_imo)),
                muliple_replace_fun (
                   v_bdy,
                   NEW t_text ('Audit Subtype:___',
                               'Audit Type: ____ ',
                               'IMO No.___',
                               'from __(Old )__ to ___(New)___'),
                   NEW t_text (
                             audit_desc_msg
                          || ' Subtype: '
                          || audit_subtype_desc,
                          audit_desc_msg || '  Type:  ' || audit_type_desc,
                          ' IMO No.: ' || v_vessel_imo,
                          ' to ' || user_name))
           INTO v_subject, v_body
           FROM (SELECT (SELECT AUDIT_TYPE_DESC
                           FROM MA_AUDIT_TYPE
                          WHERE AUDIT_TYPE_ID = :NEW.AUDIT_TYPE_ID)
                           audit_type_desc,
                        (SELECT AUDIT_SUBTYPE_DESC
                           FROM MA_AUDIT_SUBTYPE
                          WHERE AUDIT_TYPE_ID = :NEW.AUDIT_TYPE_ID
                                AND AUDIT_SUB_TYPE_ID = v_audit_sub_type)
                           audit_subtype_desc,
                        (SELECT first_name || ' ' || last_name
                           FROM ma_users mu
                          WHERE mu.user_id = :NEW.USER_ID
                                AND mu.company_id = :NEW.COMPANY_ID)
                           user_name
                   FROM DUAL) test;

         SELECT listagg (b.user_id, ',')
                   WITHIN GROUP (ORDER BY b.sequence_number)
           INTO v_to
           FROM ma_users b
          WHERE     :NEW.user_id = b.user_id
                AND :NEW.company_id = b.company_id
                AND :NEW.audit_role_id = 1001;
dbms_output.put_line(:new.company_id);
dbms_output.put_line(v_from);
dbms_output.put_line(v_to);
dbms_output.put_line(v_cc);
dbms_output.put_line(v_subject);
dbms_output.put_line(v_body);
         audit_send_mail_prc ('LEAD AUDITOR CHANGE',
                              :NEW.company_id,
                              v_from,
                              v_to,
                              v_cc,
                              v_subject,
                              v_body);
      END IF;
   END IF;
EXCEPTION
   WHEN OTHERS
   THEN
      DBMS_OUTPUT.put_line (
            '  OUTER BLOCK EXCEPTION '
         || SQLCODE
         || ' >> '
         || SQLERRM
         || '  >> '
         || DBMS_UTILITY.format_error_backtrace);
END;
/
