DROP TRIGGER AUDIT_STAG_TEST.UNLOCK_LINKED_DMLC;

CREATE OR REPLACE TRIGGER AUDIT_STAG_TEST."UNLOCK_LINKED_DMLC" 

   AFTER INSERT OR UPDATE OF ALLOW_NEXT
                   
   ON AUDIT_STAG_TEST.AUDIT_DETAILS    FOR EACH ROW
DECLARE
v_DMLC_AUDIT_SEQ_NO              NUMBER;

PRAGMA AUTONOMOUS_TRANSACTION;
BEGIN
dbms_output.put_line('new allowNext '||:NEW.ALLOW_NEXT);
dbms_output.put_line('old allowNext '||:OLD.ALLOW_NEXT);

IF :NEW.AUDIT_TYPE_ID = 1003 AND  :NEW.ALLOW_NEXT<>NULL AND :OLD.ALLOW_NEXT<>NULL AND   :NEW.ALLOW_NEXT <> :OLD.ALLOW_NEXT
      THEN
        IF :NEW.ALLOW_NEXT=1 THEN
            SELECT SSP_DMLC_AUDIT_SEQ_NO INTO v_DMLC_AUDIT_SEQ_NO FROM SSP_REVIEW_DATA WHERE AUDIT_SEQ_NO=:OLD.AUDIT_SEQ_NO AND COMPANY_ID=:OLD.COMPANY_ID;
            dbms_output.put_line('unlocking '||v_DMLC_AUDIT_SEQ_NO);
            UPDATE AUDIT_DETAILS SET LOCK_STATUS=0 WHERE AUDIT_SEQ_NO=v_DMLC_AUDIT_SEQ_NO AND COMPANY_ID=:NEW.COMPANY_ID;
            dbms_output.put_line('updated no error');
            COMMIT;
        END IF;

        IF :NEW.ALLOW_NEXT=0 AND :OLD.ALLOW_NEXT=1 THEN
            SELECT SSP_DMLC_AUDIT_SEQ_NO INTO v_DMLC_AUDIT_SEQ_NO FROM SSP_REVIEW_DATA WHERE AUDIT_SEQ_NO=:OLD.AUDIT_SEQ_NO AND COMPANY_ID=:OLD.COMPANY_ID;
            dbms_output.put_line('locking '||v_DMLC_AUDIT_SEQ_NO);
            UPDATE AUDIT_DETAILS SET LOCK_STATUS=3 WHERE AUDIT_SEQ_NO=v_DMLC_AUDIT_SEQ_NO AND COMPANY_ID=:NEW.COMPANY_ID;
            dbms_output.put_line('updated no error');
            COMMIT;
        END IF;

END IF;
END;
/
