DROP TRIGGER AUDIT_STAG_TEST.LOCK_LINKED_DMLC;

CREATE OR REPLACE TRIGGER AUDIT_STAG_TEST.LOCK_LINKED_DMLC
   AFTER INSERT OR UPDATE OF SSP_DMLC_AUDIT_SEQ_NO
   ON AUDIT_STAG_TEST.SSP_REVIEW_DATA    FOR EACH ROW
DECLARE
v_DMLC_AUDIT_SEQ_NO              NUMBER;

PRAGMA AUTONOMOUS_TRANSACTION;
BEGIN
dbms_output.put_line(:NEW.SSP_DMLC_AUDIT_SEQ_NO);
dbms_output.put_line(:OLD.SSP_DMLC_AUDIT_SEQ_NO);
IF :NEW.AUDIT_TYPE_ID = 1003 AND (:NEW.SSP_DMLC_AUDIT_SEQ_NO <> :OLD.SSP_DMLC_AUDIT_SEQ_NO OR :NEW.SSP_DMLC_AUDIT_SEQ_NO IS NULL OR :OLD.SSP_DMLC_AUDIT_SEQ_NO IS NULL)
      THEN
      dbms_output.put_line('updating' || :NEW.SSP_DMLC_AUDIT_SEQ_NO);
      UPDATE AUDIT_DETAILS SET LOCK_STATUS=3 WHERE AUDIT_SEQ_NO=:NEW.SSP_DMLC_AUDIT_SEQ_NO AND COMPANY_ID=:NEW.COMPANY_ID;

      IF :OLD.SSP_DMLC_AUDIT_SEQ_NO IS NOT NULL
      THEN
       dbms_output.put_line('removing lock' || :OLD.SSP_DMLC_AUDIT_SEQ_NO);
      UPDATE AUDIT_DETAILS SET LOCK_STATUS=0 WHERE AUDIT_SEQ_NO=:OLD.SSP_DMLC_AUDIT_SEQ_NO AND COMPANY_ID=:NEW.COMPANY_ID;
      dbms_output.put_line('removing lock no error');
      END IF;
      COMMIT;
END IF;
END;
/
