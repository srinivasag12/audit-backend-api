CREATE OR REPLACE PROCEDURE AUDIT_STAG_TEST.LeadInitateReviewPrc (
   pAudSeqNo     VARCHAR2,
   pCompanyId    NUMBER)
AS
v_admin varchar2(200 byte);
   vSignCount   NUMBER;
   vLeadAud     VARCHAR2 (500);
   vToMail      VARCHAR2 (500);
   vSub         VARCHAR2 (500);
   vBody        VARCHAR2 (500);
   vAccLink     VARCHAR2 (100) := 'Initiate Review Audit ' || pAudSeqNo;
   vUser        VARCHAR2 (30);
   vErrMsg      VARCHAR2 (1000);

   PRAGMA AUTONOMOUS_TRANSACTION;
BEGIN
   SELECT COUNT (*)
     INTO vSignCount
     FROM audit_auditor_details
    WHERE     audit_Seq_no LIKE pAudSeqNo                             --602356
          AND company_id = pCompanyId
          AND audit_role_id = 1001
          AND DBMS_LOB.getlength (aud_signature) IS NULL;

   DBMS_OUTPUT.put_line (vSignCount);

   IF vSignCount = 0 
   THEN
      SELECT user_id
        INTO vLeadAud
        FROM audit_auditor_details
       WHERE     audit_Seq_no LIKE pAudSeqNo                          --602356
             AND company_id = pCompanyId
             AND audit_role_id = 1001
             AND aud_lead_status = 1;

      DBMS_OUTPUT.put_line (vLeadAud);

      SELECT subject, body
        INTO vSub, vbody
        FROM audit_email_dtls
       WHERE email_seq = 22;
       
       dbms_output.put_line(vacclink);
       dbms_output.put_line(pCompanyId);
       dbms_output.put_line(audit_details_pkg.v_from);
       DBMS_OUTPUT.PUT_LINE(vLeadAud);
      
       dbms_output.put_line(vSub);
       dbms_output.put_line( vBody);
       SELECT listAgg (user_id,',') WITHIN GROUP (ORDER BY role_id ASC)
     INTO v_admin
     FROM MA_USER_ROLES USRL
    WHERE USRL.ROLE_ID = 1002 and company_id=pCompanyId;
        dbms_output.put_line('vcc'||v_admin);

      AUDIT_SEND_MAIL_PRC (vAccLink,
                           pCompanyId,
                           v_admin,               --pFromMail
                           vLeadAud,                                  --toMail
                           v_admin,                  -- vCC,
                           vSub,
                           vBody);
   END IF;
EXCEPTION
   WHEN OTHERS
   THEN
      vErrMsg := SQLERRM || ' ' || DBMS_UTILITY.format_error_backtrace;

      SELECT USER INTO vUser FROM DUAL;


      INSERT INTO audit_email_log_dtls (email_seq,
                                        access_link,
                                        from_mail,
                                        to_mail,
                                        cc_mail,
                                        subject,
                                        MESSAGE,
                                        status,
                                        error_message,
                                        company_id,
                                        user_ins)
           VALUES (audit_email_dtls_seq.NEXTVAL,
                   vAccLink,
                   audit_details_pkg.v_from,                       --pFromMail
                   vLeadAud,                                          --toMail
                   audit_details_pkg.v_admin,                          -- vCC,
                   vSub,
                   vBody,
                   'Failed',
                   vErrMsg, --SQLERRM || ' ' || DBMS_UTILITY.format_error_backtrace,
                   pCompanyId,
                   vUser);

      COMMIT;
END;
/
