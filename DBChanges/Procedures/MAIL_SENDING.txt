CREATE OR REPLACE PROCEDURE AUDIT_STAG_TEST.MAIL_SENDING (
   p_from_mail       VARCHAR2,
   p_to_mail         VARCHAR2,
   p_cc_mail         VARCHAR2 DEFAULT NULL,
   p_subject         VARCHAR2,
   p_body            VARCHAR2,
   p_smtp_host    IN VARCHAR2 DEFAULT  '3.135.76.30', --13.233.31.36',   
   p_smtp_port    IN NUMBER DEFAULT 587)  --25
AS
   l_mail_conn   UTL_SMTP.connection;
   v_user        VARCHAR2 (30);
   v_err_msg     VARCHAR2 (1000);

   PRAGMA AUTONOMOUS_TRANSACTION;

   PROCEDURE process_recipients (p_mail_conn   IN OUT UTL_SMTP.connection,
                                 p_list        IN     VARCHAR2)
   AS
      l_tab   string_api.t_split_array;
   BEGIN
      IF TRIM (p_list) IS NOT NULL
      THEN
         l_tab := string_api.split_text (p_list);

         FOR i IN 1 .. l_tab.COUNT
         LOOP
         DBMS_OUTPUT.PUT_LINE('MAIL HAS SENT');
            UTL_SMTP.rcpt (p_mail_conn, TRIM (l_tab (i)));
         END LOOP;
      END IF;
   END;
BEGIN

   --Code to send email--
  l_mail_conn := UTL_SMTP.open_connection (p_smtp_host, p_smtp_port);
   UTL_SMTP.helo (l_mail_conn, p_smtp_host);
   UTL_SMTP.mail (l_mail_conn, p_from_mail);
   process_recipients (l_mail_conn, p_to_mail);
   process_recipients (l_mail_conn, p_cc_mail);
   --  process_recipients(l_mail_conn, p_bcc);
--
  UTL_SMTP.open_data (l_mail_conn);

   UTL_SMTP.write_data (
      l_mail_conn,
     'Date: ' || TO_CHAR (SYSDATE, 'DD-MON-YYYY HH24:MI:SS') || UTL_TCP.crlf);
   UTL_SMTP.write_data (l_mail_conn, 'To: ' || p_to_mail || UTL_TCP.crlf);

  IF TRIM (p_cc_mail) IS NOT NULL
     THEN
      UTL_SMTP.write_data (
         l_mail_conn,
       'CC: ' || REPLACE (p_cc_mail, ',', ';') || UTL_TCP.crlf);
   END IF;
--
  --  IF TRIM(p_bcc) IS NOT NULL THEN
   --    UTL_SMTP.write_data(l_mail_conn, 'BCC: ' || REPLACE(p_bcc, ',', ';') || UTL_TCP.crlf);
   --  END IF;
   
   UTL_SMTP.write_data (l_mail_conn, 'From: ' || p_from_mail || UTL_TCP.crlf);
   UTL_SMTP.write_data (l_mail_conn,
                        'Subject: ' || p_subject || UTL_TCP.crlf);
   --   UTL_SMTP.write_data (
   --      l_mail_conn,
     -- 'Reply-To: ' || p_from_mail || UTL_TCP.crlf || UTL_TCP.crlf);

   UTL_SMTP.write_data (l_mail_conn, p_body || UTL_TCP.crlf || UTL_TCP.crlf);
   UTL_SMTP.close_data (l_mail_conn);

  UTL_SMTP.quit (l_mail_conn);

   --end of sending mail--
SELECT USER INTO v_user FROM DUAL;
dbms_output.put_line('Mail has sent');

END;
/
