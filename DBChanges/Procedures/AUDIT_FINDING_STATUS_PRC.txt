CREATE OR REPLACE PROCEDURE AUDIT_STAG_TEST.Audit_Finding_Status_Prc
AS
   CURSOR LastFind
   IS
      (SELECT lfs.*, afd.Status_Date, afd.next_action_id
         FROM Last_finding_Status lfs, Audit_Findings_Details afd
        WHERE     lfs.Audit_Seq_No = AFD.Orig_Seq_No
              AND lfs.Company_Id = afd.Company_Id
              AND lfs.Finding_Seq_No = afd.Finding_Seq_No
              AND afd.status_Seq_no = 1);

   v_Vsl_Imo_No       NUMBER;
   v_CompanyId        NUMBER;
   v_AudType          NUMBER;
   v_AudSubType       NUMBER;
   v_Aud_SeqNo        NUMBER;
   v_Find_SeqNo       NUMBER;
   v_AudCode          VARCHAR2 (100);
   v_Status_SeqNo     NUMBER;
   v_Find_CatgId      NUMBER;
   v_StatusId         NUMBER;
   v_StatusDate       DATE;
   v_DueDate          VARCHAR (500);
   v_DateDiff         NUMBER;
   v_AudDate          DATE;
   v_Expiry_Days      NUMBER;
   --Mail Details
   v_From             VARCHAR2 (100) := AUDIT_DETAILS_PKG.V_FROM;
   v_To               VARCHAR2 (100);
   v_Sub              VARCHAR2 (100);
   v_Body             VARCHAR2 (1000);
   v_Cc               VARCHAR2 (100);-- := AUDIT_DETAILS_PKG.V_ADMIN;
   v_admin varchar2(200 byte);
   --Mail Sub and Body Details
   v_Find_Categ       VARCHAR2 (300);
   v_AudElement       VARCHAR2 (1000);
   v_VslName          VARCHAR2 (300);
   v_AudTypeDesc      VARCHAR2 (30);
   v_AudSubTypeDesc   VARCHAR2 (30);

   audit_desc_msg     VARCHAR2 (20);
   v_LeadAud          VARCHAR2 (500);
   vNextAction        NUMBER;
   
BEGIN

   OPEN LastFind;

   LOOP
      FETCH LastFind
      INTO v_Vsl_Imo_No,
           v_CompanyId,
           v_AudDate,
           v_AudType,
           v_AudSubType,
           v_Aud_SeqNo,
           v_Find_SeqNo,
           v_AudCode,
           v_Status_SeqNo,
           v_Find_CatgId,
           v_StatusId,
           v_DueDate,
           v_StatusDate,
           vNextAction;

      EXIT WHEN LastFind%NOTFOUND;

      SELECT CASE
                WHEN     v_Find_CatgId = 1003                -- downgraded mnc
                     AND v_StatusId = 1001                             -- open
                     AND vNextAction = 1004                   -- plan accepted
                     AND v_AudType = 1001                               -- ISM
                THEN
                   TRUNC (SYSDATE - (v_StatusDate + 30))
                WHEN     v_Find_CatgId = 1003                -- DOWNGRADED MNC
                     AND v_StatusId = 1004                    -- plan accepted
                     AND vNextAction = 1005                    -- verify/close
                     AND v_AudType = 1001                               -- ISM
                THEN
                   TRUNC (SYSDATE - (v_StatusDate + 60))
                WHEN     v_Find_CatgId = 1003      -- DOWNGRADED MAJOR FAILURE
                     AND v_StatusId = 1003              -- COMPLIANCE RESTORED
                     AND vNextAction = 1004                   -- plan accepted
                     AND v_AudType = 1002                              -- ISPS
                THEN
                   TRUNC (SYSDATE - (v_StatusDate + 30))
                WHEN     v_Find_CatgId = 1003      -- DOWNGRADED MAJOR FAILURE
                     AND v_StatusId = 1004                    -- Downgraded MF
                     AND vNextAction = 1005                    -- verify/close
                     AND v_AudType = 1002                              -- isps
                THEN
                   TRUNC (SYSDATE - (v_StatusDate + 60))
                /*
                                WHEN     v_Find_CatgId = 1003                             --SD
                                     AND v_StatusId = 1001                             -- open
                                     AND v_AudType = 1003                               -- MLC
                                THEN
                                   TRUNC (SYSDATE - (v_StatusDate + 30))
                */
                WHEN     v_Find_CatgId = 1003  --DOWNGRADED SERIOUS DEFICIENCY
                     AND v_StatusId = 1004                    -- PLAN ACCEPTED
                     AND vNextAction = 1005                     --VERIFY/CLOSE
                     AND v_AudType = 1003                               -- MLC
                THEN
                   TRUNC (SYSDATE - (v_StatusDate + 60))
                ELSE
                   NULL
             END
                CASE
        INTO v_DateDiff
        FROM DUAL;
SELECT listAgg (user_id,',') WITHIN GROUP (ORDER BY role_id ASC)
     INTO v_admin
     FROM MA_USER_ROLES USRL
    WHERE USRL.ROLE_ID = 1002 and company_id=v_CompanyId;
  v_Cc:=v_admin;
      DBMS_OUTPUT.put_line (
            'v_DateDiff '
         || v_DateDiff
         || ' for the audit is '
         || v_Aud_SeqNo
         || ' audit type '
         || v_Find_CatgId
         || ' finding catergory id '
         || v_Find_CatgId
         || ' and its status id '
         || v_StatusId
         || ' for the vessel imo no is '
         || v_Vsl_Imo_No
         || 'expire will be on '
         || v_DueDate);

      --ToMailID
      SELECT Expiry_Days
        INTO v_Expiry_Days
        FROM AUDIT_VALIDTITY_DAYS_DTLS
       WHERE Email_Seq = 14;

      IF v_AudType IN (1003, 1004, 1005)
      THEN
         audit_desc_msg := 'Review';
      ELSE
         audit_desc_msg := 'Audit';
      END IF;

      CASE
         WHEN v_DateDiff IS NOT NULL AND v_DateDiff <= v_Expiry_Days
         THEN
            SELECT listagg (b.user_id, ',') WITHIN GROUP (ORDER BY b.user_id),
                   listagg (a.first_name || ' ' || a.last_name, ',')
                      WITHIN GROUP (ORDER BY b.user_id)
              INTO v_to, v_LeadAud
              FROM ma_users a,
                   (SELECT b.company_id, b.user_id
                      FROM audit_details a, audit_auditor_details b
                     WHERE     a.audit_seq_no = b.audit_seq_no
                           AND a.company_id = b.company_id
                           AND b.aud_lead_status = 1
                           AND b.audit_role_id IN
                                  (SELECT audit_role_id
                                     FROM ma_audit_roles
                                    WHERE audit_role_desc LIKE 'AUDITOR'
                                          AND company_id = v_CompanyId)
                           AND a.audit_seq_no = v_Aud_SeqNo
                           AND a.company_id = v_CompanyId) b
             WHERE a.company_id = b.company_id AND a.user_id = b.user_id;

            --Picking of Email Sub and Body Details

            SELECT mfc.finding_category_desc
              INTO v_Find_Categ
              FROM ma_findings_category mfc
             WHERE     mfc.finding_category_id = v_Find_CatgId
                   AND mfc.audit_type_id = v_AudType
                   AND mfc.company_id = v_CompanyId;

            SELECT CASE
                      WHEN Audit_Elements IS NOT NULL THEN Audit_Elements
                      ELSE NULL
                   END
              INTO v_AudElement
              FROM Ma_Audit_Codes
             WHERE     Audit_Type_Id = v_AudType
                   AND Audit_Code = v_AudCode
                   AND Company_Id = v_CompanyId;

            SELECT CASE
                      WHEN Vessel_Name IS NOT NULL THEN Vessel_Name
                      ELSE NULL
                   END
              INTO v_VslName
              FROM Ma_Vessel
             WHERE Vessel_IMO_NO = v_Vsl_Imo_No AND Company_Id = v_CompanyId;

            SELECT CASE
                      WHEN Audit_Type_Desc IS NOT NULL THEN Audit_Type_Desc
                      ELSE NULL
                   END
              INTO v_AudTypeDesc
              FROM Ma_Audit_Type
             WHERE Audit_Type_Id = v_AudType AND Company_Id = v_CompanyId;

            SELECT CASE
                      WHEN Audit_SubType_Desc IS NOT NULL
                      THEN
                         Audit_SubType_Desc
                      ELSE
                         NULL
                   END
              INTO v_AudSubTypeDesc
              FROM Ma_Audit_SubType
             WHERE     Audit_Type_Id = v_AudType
                   AND Audit_Sub_Type_Id = v_AudSubType
                   AND Company_Id = v_CompanyId;

            CASE
               WHEN v_DateDiff > 0
               THEN
                  SELECT muliple_replace_fun (
                            subject,
                            NEW t_text (' ___(Category)___', 'expire in ___'),
                            NEW t_text (' ' || v_Find_Categ || ' ',
                                        ' expire in ' || v_DateDiff || ' '))
                    INTO v_sub
                    FROM (SELECT subject, body
                            FROM audit_email_dtls
                           WHERE email_seq = 14);
               WHEN v_DateDiff < 0
               THEN
                  SELECT muliple_replace_fun (
                            subject,
                            NEW t_text (' ___(Category)___', 'expire in ___'),
                            NEW t_text (' ' || v_Find_Categ || ' ',
                                        ' expire in' || v_DateDiff || ' '))
                    INTO v_sub
                    FROM (SELECT subject, body
                            FROM audit_email_dtls
                           WHERE email_seq = 14);
               WHEN v_DateDiff = 0
               THEN
                  SELECT muliple_replace_fun (
                            subject,
                            NEW t_text (' ___(Category)___',
                                        'expire in ___',
                                        'days!!!'),
                            NEW t_text (' ' || v_Find_Categ || ' ',
                                        ' expire  Today',
                                        ''))
                    INTO v_sub
                    FROM (SELECT subject, body
                            FROM audit_email_dtls
                           WHERE email_seq = 14);
               ELSE
                  NULL;
            END CASE;


            SELECT muliple_replace_fun (
                      body,
                      NEW t_text ('Vessel Name:___',
                                  'Vessel IMO #:___',
                                  'Audit Type:___',
                                  'Audit Subtype:___',
                                  'ISM Code__',
                                  'ISM Element___',
                                  'Latest category____',
                                  'Due date:___',
                                  'Lead Auditor:___'),
                      NEW t_text (
                             'Vessel Name: ' || v_VslName,
                             ' Vessel IMO #: ' || v_Vsl_Imo_No,
                             audit_desc_msg || ' Type: ' || v_AudTypeDesc,
                                audit_desc_msg
                             || ' Subtype: '
                             || v_AudSubTypeDesc,
                             ' ISM Code ' || v_AudCode,
                             ' ISM Element ' || v_AudElement,
                             ' Latest category ' || v_Find_Categ,
                             ' Due date: ' || v_DueDate,
                             ' Lead Auditor: ' || v_LeadAud))
              INTO v_body
              FROM (SELECT subject, body
                      FROM audit_email_dtls
                     WHERE email_seq = 14);

            DBMS_OUTPUT.PUT_LINE (v_sub || ' >> ' || v_body);

            audit_send_mail_prc ('Changing of findings status',
                                 v_CompanyId,
                                 v_From,
                                 v_To,
                                 v_Cc,
                                 v_Sub,
                                 v_Body);
         ELSE
            NULL;
      END CASE;
   END LOOP;

   CLOSE LastFind;

   -- Added by Mohan to mark the audit as Closed
   UPDATE audit_details
      SET audit_status_id = 1003
    WHERE company_id = 2
          AND audit_seq_no IN
                 (SELECT a.audit_seq_no
                    FROM audit_findings a
                   WHERE     a.finding_status = 1
                         AND a.date_ins >= SYSDATE - 1
                         AND a.audit_seq_no = audit_seq_no)
          AND audit_seq_no NOT IN
                 (SELECT a.audit_seq_no
                    FROM audit_findings a
                   WHERE     a.finding_status = 0
                         AND a.date_ins >= SYSDATE - 1
                         AND a.audit_seq_no = audit_seq_no);

   COMMIT;
EXCEPTION
   WHEN OTHERS
   THEN
      DBMS_OUTPUT.Put_Line (
         SQLERRM || ' >> ' || DBMS_UTILITY.format_error_backtrace);
END;
/
