CREATE OR REPLACE PROCEDURE AUDIT_STAG_TEST.AUDIT_PARTIAL_VESSEL_SCHE_PRC
IS
   v_company_id           NUMBER;
   v_due_date             VARCHAR2 (100);
   v_from                 VARCHAR2 (200) := audit_details_pkg.v_from;
   v_to                   VARCHAR2 (200) := AUDIT_DETAILS_PKG.V_VESDOC_DEPT;
   v_mgr                  VARCHAR2 (500);
   v_admin                VARCHAR2 (100);
   v_cc                   VARCHAR2 (1000);
   v_sub                  VARCHAR2 (2000);
   v_body                 VARCHAR2 (2000);
   v_vessel_imo_no        NUMBER;
   v_vessel_id            NUMBER;
   v_Err_Msg              VARCHAR2 (200);
   official_no            NUMBER;
   v_company_imo_number   NUMBER;
   doc_type_number        NUMBER;
   doc_type               VARCHAR2 (200);
   vessel_name            VARCHAR2 (200);
   v_user_id              VARCHAR2 (200);
   v_count                NUMBER;
   CUR1                   SYS_REFCURSOR;
BEGIN
   OPEN CUR1 FOR
      SELECT COMPANY_ID,
             USER_ID,
             VESSEL_IMO_NO,
             VESSEL_ID,
             TO_CHAR (DUE_DATE, 'DD-MON-YYYY')
        FROM PARTIAL_VESSEL_DETAILS_LOG
       WHERE TO_DATE (DUE_DATE, 'dd-mm-RRRR ') =
                (SELECT TO_DATE (SYSDATE - 1, 'dd-mm-RRRR') FROM DUAL);

   LOOP
      FETCH CUR1
      INTO v_company_id, v_user_id, v_vessel_imo_no, v_vessel_id, v_due_date;

      EXIT WHEN CUR1%NOTFOUND;

      SELECT subject, body
        INTO v_sub, v_body
        FROM audit_email_dtls
       WHERE email_seq = 29;


      SELECT COUNT (VESSEL_IMO_NO)
        INTO v_count
        FROM MA_VESSEL
       WHERE VESSEL_IMO_NO = v_vessel_imo_no AND COMPANY_ID = v_company_id;

      IF V_COUNT > 0
      THEN
         SELECT mav.OFFICIAL_NO,
                mav.COMPANY_IMO_NO,
                mav.DOC_TYPE_NUMBER,
                mavc.DOC_TYPE_NO,
                mav.VESSEL_NAME
           INTO official_no,
                v_company_imo_number,
                doc_type_number,
                doc_type,
                vessel_name
           FROM ma_vessel mav, MA_VESSEL_COMPANY mavc
          WHERE     MAV.COMPANY_IMO_NO = MAVC.COMPANY_IMO_NO
                AND MAV.COMPANY_ID = MAVC.COMPANY_ID
                AND mav.VESSEL_IMO_NO = v_vessel_imo_no
                AND mav.company_id = v_company_id
                AND MAV.VESSEL_ID = v_vessel_id;

         SELECT muliple_replace_fun (
                   v_sub,
                   NEW t_text ('Vessel IMO No:__',
                               'Vessel Name: __',
                               'Official No.:___'),
                   NEW t_text ('Vessel IMO No:' || v_vessel_imo_no,
                               'Vessel Name:' || vessel_name,
                               'Official No:' || official_no)),
                muliple_replace_fun (
                   v_body,
                   NEW t_text ('IMO Number: ___',
                               'Vessel Name: ___',
                               'Official No.: ___',
                               'Company IMO No.:____',
                               'DOC Type & No.:____',
                               'DD-MMM-YYYY',
                               'Auditor/ Manager/ Inspector:__'),
                   NEW t_text (
                          'IMO Number: ' || v_vessel_imo_no,
                          'Vessel Name: ' || vessel_name,
                          'Official No: ' || official_no,
                          'Company IMO No: ' || v_company_imo_number,
                             'DOC Type & No: '
                          || doc_type
                          || ' & '
                          || doc_type_number,
                          v_due_date,
                          v_role_desc || ': ' || v_role_name || ', '
                          || 'has been crossed. Please update the complete Vessel/Company Details'))
           INTO v_sub, v_body
           FROM (SELECT (SELECT FIRST_NAME || ' ' || LAST_NAME
                           FROM MA_USERS
                          WHERE USER_ID = v_user_id
                                AND COMPANY_ID = v_company_id)
                           v_role_name,
                        (SELECT CASE
                                   WHEN ROLE_ID = 1003 THEN 'Manager'
                                   WHEN ROLE_ID = 1002 THEN 'Admin'
                                   ELSE 'Auditor'
                                END
                           FROM MA_USER_ROLES
                          WHERE USER_ID = V_USER_ID
                                AND COMPANY_ID = V_COMPANY_ID)
                           v_role_desc
                   FROM DUAL) TEST;

         SELECT listAgg (user_id, ',') WITHIN GROUP (ORDER BY role_id ASC)
           INTO v_mgr
           FROM MA_USER_ROLES USRL
          WHERE USRL.ROLE_ID = 1003 AND company_id = v_company_id;

         SELECT listAgg (user_id, ',') WITHIN GROUP (ORDER BY role_id ASC)
           INTO v_admin
           FROM MA_USER_ROLES USRL
          WHERE USRL.ROLE_ID = 1002 AND company_id = v_company_id;

         v_cc := v_user_id || ',' || v_mgr || ',' || v_admin;

         DBMS_OUTPUT.PUT_LINE ('v_sub ' || v_sub);
         DBMS_OUTPUT.PUT_LINE ('v_bdy ' || v_body);


         audit_send_mail_prc ('Alert for Findings Overdue ',
                              v_company_id,
                              v_from,
                              v_to,
                              v_cc,
                              v_sub,
                              v_body);
      END IF;
   END LOOP;
EXCEPTION
   WHEN OTHERS
   THEN
      SELECT subject
        INTO v_sub
        FROM audit_email_dtls
       WHERE email_seq = 80;

      DBMS_OUTPUT.PUT_LINE ('vErrMsg ' || v_Err_Msg);

      DBMS_OUTPUT.put_line (
            '  OUTER BLOCK EXCEPTION '
         || SQLCODE
         || ' >> '
         || SQLERRM
         || '  >> '
         || DBMS_UTILITY.format_error_backtrace);
      v_Err_Msg := SQLERRM || ' on ' || DBMS_UTILITY.format_error_backtrace;
      audit_send_mail_prc (p_audit_no     => 'Alert for Findings Overdue  ',
                           p_company_id   => v_company_id,
                           p_from_mail    => v_from,
                           p_to_mail      => audit_details_pkg.V_BSOLTEAM,
                           p_subject      => v_sub,
                           p_body         => v_Err_Msg);
END;
/
